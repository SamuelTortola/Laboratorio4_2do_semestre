
Esclavo 1_pot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000008e8  0000097c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080010a  0080010a  00000986  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000986  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a81  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b9  00000000  00000000  0000154d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ea  00000000  00000000  00001e06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  000023f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000483  00000000  00000000  00002538  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000264  00000000  00000000  000029bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002c1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_24>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ee       	ldi	r30, 0xE8	; 232
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 31       	cpi	r26, 0x1E	; 30
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
  9e:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initADC>:
#include "ADC.h"

void initADC(){
	
	ADMUX = 0;
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
	DIDR0 |= (1 <<ADC0D);	//desabilitar el A0 como digital
  ac:	ae e7       	ldi	r26, 0x7E	; 126
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	8c 91       	ld	r24, X
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	8c 93       	st	X, r24
	DIDR0 |= (1<<ADC1D);     //desabilitar el A1 como digital
  b6:	8c 91       	ld	r24, X
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	8c 93       	st	X, r24


	//JUSTIFICACION IZQUIERDA
	ADMUX |= (1<<ADLAR);
  bc:	80 81       	ld	r24, Z
  be:	80 62       	ori	r24, 0x20	; 32
  c0:	80 83       	st	Z, r24
	//REFERENCIA INTERNA
	ADMUX |= (1<<REFS0);
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);
  c8:	80 81       	ld	r24, Z
  ca:	8f 77       	andi	r24, 0x7F	; 127
  cc:	80 83       	st	Z, r24
	// HABILITAR INTERRUPCION
	ADCSRA |= (1<<ADIE);
  ce:	ea e7       	ldi	r30, 0x7A	; 122
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	88 60       	ori	r24, 0x08	; 8
  d6:	80 83       	st	Z, r24
	//PRESCALER 128
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);  //Habilitando prescaler de 16M/128 frecuencia = 125Khz
  d8:	80 81       	ld	r24, Z
  da:	87 60       	ori	r24, 0x07	; 7
  dc:	80 83       	st	Z, r24
	//HABILITAR ADC
	ADCSRA |= (1<<ADEN);
  de:	80 81       	ld	r24, Z
  e0:	80 68       	ori	r24, 0x80	; 128
  e2:	80 83       	st	Z, r24
  e4:	08 95       	ret

000000e6 <I2C_Config_SLAVE>:


uint8_t esclavo, dato, aux;

void I2C_Config_SLAVE(uint8_t address){
	DDRC &= ~((1<<DDC4) | (1<<DDC5));
  e6:	97 b1       	in	r25, 0x07	; 7
  e8:	9f 7c       	andi	r25, 0xCF	; 207
  ea:	97 b9       	out	0x07, r25	; 7
	
	address <<= 1;  //Ubica la dirección y
  ec:	88 0f       	add	r24, r24
	address |= 0x01; //habilita para reconocer las llamadas generales de I2C
  ee:	81 60       	ori	r24, 0x01	; 1
	TWAR = address;
  f0:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
	
	TWCR = (1 << TWEA) | (1 << TWEN) | (1 << TWIE); //Habilita el BUS, con reconocimiento e interrupción
  f4:	85 e4       	ldi	r24, 0x45	; 69
  f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  fa:	08 95       	ret

000000fc <setup>:
// Sub-Rutinas
/////////////////////////////////////////////

void setup(void);
void setup(void){
    cli();  // Apagar interrupciones
  fc:	f8 94       	cli
    DDRC = 0;  // Puerto C como entrada
  fe:	17 b8       	out	0x07, r1	; 7
    initADC(); // Iniciar ADC
 100:	0e 94 53 00 	call	0xa6	; 0xa6 <initADC>
    I2C_Config_SLAVE(0x02); // Configurar como esclavo I2C
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	0e 94 73 00 	call	0xe6	; 0xe6 <I2C_Config_SLAVE>
    UART_init(9600); // Configurar UART a 9600 baudios
 10a:	60 e8       	ldi	r22, 0x80	; 128
 10c:	75 e2       	ldi	r23, 0x25	; 37
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 2f 01 	call	0x25e	; 0x25e <UART_init>
    sei(); // Activar interrupciones
 116:	78 94       	sei
 118:	08 95       	ret

0000011a <main>:
/////////////////////////////////////////////
// Código Principal
/////////////////////////////////////////////
int main(void)
{
    setup();
 11a:	0e 94 7e 00 	call	0xfc	; 0xfc <setup>
    
    while (1) 
    {
        ADCSRA |= (1<<ADSC);  // Iniciar conversión ADC
 11e:	ea e7       	ldi	r30, 0x7A	; 122
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	80 64       	ori	r24, 0x40	; 64
 126:	80 83       	st	Z, r24

        // Enviar el valor del ADC a través de UART
        snprintf(buffer, sizeof(buffer), "ADC: %d\r\n", datoADC);
 128:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 12c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	9f 93       	push	r25
 13a:	8f 93       	push	r24
 13c:	1f 92       	push	r1
 13e:	80 e1       	ldi	r24, 0x10	; 16
 140:	8f 93       	push	r24
 142:	8e e0       	ldi	r24, 0x0E	; 14
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	9f 93       	push	r25
 148:	8f 93       	push	r24
 14a:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <snprintf>
        UART_sendString(buffer);
 14e:	8e e0       	ldi	r24, 0x0E	; 14
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	0e 94 4b 01 	call	0x296	; 0x296 <UART_sendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	89 ef       	ldi	r24, 0xF9	; 249
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0x42>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0x4c>
 166:	00 00       	nop
 168:	8d b7       	in	r24, 0x3d	; 61
 16a:	9e b7       	in	r25, 0x3e	; 62
 16c:	08 96       	adiw	r24, 0x08	; 8
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	f8 94       	cli
 172:	9e bf       	out	0x3e, r25	; 62
 174:	0f be       	out	0x3f, r0	; 63
 176:	8d bf       	out	0x3d, r24	; 61
 178:	d2 cf       	rjmp	.-92     	; 0x11e <main+0x4>

0000017a <__vector_21>:
}

/////////////////////////////////////////////
// Vectores de interrupciones
/////////////////////////////////////////////
ISR(ADC_vect){
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	ef 93       	push	r30
 18a:	ff 93       	push	r31
    datoADC = ADCH; // Lectura del valor completo del ADC (10 bits)
 18c:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 196:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
    ADCSRA |= (1<<ADIF); // Borrar la bandera de interrupción
 19a:	ea e7       	ldi	r30, 0x7A	; 122
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	80 61       	ori	r24, 0x10	; 16
 1a2:	80 83       	st	Z, r24
}
 1a4:	ff 91       	pop	r31
 1a6:	ef 91       	pop	r30
 1a8:	9f 91       	pop	r25
 1aa:	8f 91       	pop	r24
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <__vector_24>:

ISR(TWI_vect){ // Vector de interrupción de I2C
 1b6:	1f 92       	push	r1
 1b8:	0f 92       	push	r0
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	0f 92       	push	r0
 1be:	11 24       	eor	r1, r1
 1c0:	8f 93       	push	r24
 1c2:	9f 93       	push	r25
 1c4:	ef 93       	push	r30
 1c6:	ff 93       	push	r31
    uint8_t estado;
    
    estado = TWSR & 0xFC;  // Leer el estado de la interfaz
 1c8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1cc:	8c 7f       	andi	r24, 0xFC	; 252
    
    switch(estado){
 1ce:	80 39       	cpi	r24, 0x90	; 144
 1d0:	c9 f0       	breq	.+50     	; 0x204 <__vector_24+0x4e>
 1d2:	38 f4       	brcc	.+14     	; 0x1e2 <__vector_24+0x2c>
 1d4:	80 37       	cpi	r24, 0x70	; 112
 1d6:	81 f0       	breq	.+32     	; 0x1f8 <__vector_24+0x42>
 1d8:	80 38       	cpi	r24, 0x80	; 128
 1da:	a1 f0       	breq	.+40     	; 0x204 <__vector_24+0x4e>
 1dc:	80 36       	cpi	r24, 0x60	; 96
 1de:	89 f5       	brne	.+98     	; 0x242 <__vector_24+0x8c>
 1e0:	0b c0       	rjmp	.+22     	; 0x1f8 <__vector_24+0x42>
 1e2:	88 3b       	cpi	r24, 0xB8	; 184
 1e4:	e1 f0       	breq	.+56     	; 0x21e <__vector_24+0x68>
 1e6:	18 f4       	brcc	.+6      	; 0x1ee <__vector_24+0x38>
 1e8:	88 3a       	cpi	r24, 0xA8	; 168
 1ea:	c9 f0       	breq	.+50     	; 0x21e <__vector_24+0x68>
 1ec:	2a c0       	rjmp	.+84     	; 0x242 <__vector_24+0x8c>
 1ee:	80 3c       	cpi	r24, 0xC0	; 192
 1f0:	11 f1       	breq	.+68     	; 0x236 <__vector_24+0x80>
 1f2:	88 3c       	cpi	r24, 0xC8	; 200
 1f4:	01 f1       	breq	.+64     	; 0x236 <__vector_24+0x80>
 1f6:	25 c0       	rjmp	.+74     	; 0x242 <__vector_24+0x8c>
        case 0x60:
        case 0x70: // Direccionado con su dirección de esclavo
            TWCR |= (1 << TWINT);
 1f8:	ec eb       	ldi	r30, 0xBC	; 188
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	80 68       	ori	r24, 0x80	; 128
 200:	80 83       	st	Z, r24
            break;
 202:	24 c0       	rjmp	.+72     	; 0x24c <__vector_24+0x96>
        
        case 0x80:
        case 0x90:
            dato = TWDR;  // Recibió el dato, llamada general
 204:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <dato+0x1>
 20e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <dato>
            TWCR |= (1 << TWINT); // Borrar la bandera TWINT
 212:	ec eb       	ldi	r30, 0xBC	; 188
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	80 68       	ori	r24, 0x80	; 128
 21a:	80 83       	st	Z, r24
            break;
 21c:	17 c0       	rjmp	.+46     	; 0x24c <__vector_24+0x96>
        
        case 0xA8: // SLA+R recibido, maestro solicita lectura
        case 0xB8: // Dato transmitido y ACK recibido
            TWDR = datoADC; // Cargar el dato en el registro de datos
 21e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 222:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 226:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
            TWCR |= (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1 << TWEA); // Listo para la próxima operación
 22a:	ec eb       	ldi	r30, 0xBC	; 188
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	85 6c       	ori	r24, 0xC5	; 197
 232:	80 83       	st	Z, r24
            break;
 234:	0b c0       	rjmp	.+22     	; 0x24c <__vector_24+0x96>
        
        case 0xC0: // Dato transmitido y NACK recibido
        case 0xC8: // Último dato transmitido y ACK recibido
            TWCR |= (1 << TWINT) | (1 << TWEN) | (1 << TWEA); // Listo para la próxima operación
 236:	ec eb       	ldi	r30, 0xBC	; 188
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	84 6c       	ori	r24, 0xC4	; 196
 23e:	80 83       	st	Z, r24
            break;
 240:	05 c0       	rjmp	.+10     	; 0x24c <__vector_24+0x96>
        
        default: // Liberar el BUS de cualquier error
            TWCR |= (1 << TWINT) | (1 << TWSTO);
 242:	ec eb       	ldi	r30, 0xBC	; 188
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 81       	ld	r24, Z
 248:	80 69       	ori	r24, 0x90	; 144
 24a:	80 83       	st	Z, r24
            break;
    }
}
 24c:	ff 91       	pop	r31
 24e:	ef 91       	pop	r30
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	0f 90       	pop	r0
 256:	0f be       	out	0x3f, r0	; 63
 258:	0f 90       	pop	r0
 25a:	1f 90       	pop	r1
 25c:	18 95       	reti

0000025e <UART_init>:
#include "UART.h"
#define F_CPU 16000000
void UART_init(uint32_t baudrate) {
 25e:	9b 01       	movw	r18, r22
 260:	ac 01       	movw	r20, r24
	uint16_t ubrr = F_CPU / 16 / baudrate - 1;
 262:	60 e4       	ldi	r22, 0x40	; 64
 264:	72 e4       	ldi	r23, 0x42	; 66
 266:	8f e0       	ldi	r24, 0x0F	; 15
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <__udivmodsi4>
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	31 09       	sbc	r19, r1
	UBRR0H = (ubrr >> 8);
 272:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
 276:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);  // Habilitar transmisión y recepción
 27a:	88 e1       	ldi	r24, 0x18	; 24
 27c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configurar el formato de trama: 8 bits de datos, 1 bit de parada
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 286:	08 95       	ret

00000288 <UART_sendChar>:
}

void UART_sendChar(char c) {
	while (!(UCSR0A & (1 << UDRE0)));  // Esperar hasta que el buffer esté vacío
 288:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 28c:	95 ff       	sbrs	r25, 5
 28e:	fc cf       	rjmp	.-8      	; 0x288 <UART_sendChar>
	UDR0 = c;  // Enviar el carácter
 290:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 294:	08 95       	ret

00000296 <UART_sendString>:
}

void UART_sendString(const char* str) {
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	ec 01       	movw	r28, r24
	while (*str) {
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <UART_sendString+0xe>
		UART_sendChar(*str);
 29e:	0e 94 44 01 	call	0x288	; 0x288 <UART_sendChar>
		str++;
 2a2:	21 96       	adiw	r28, 0x01	; 1
	while (!(UCSR0A & (1 << UDRE0)));  // Esperar hasta que el buffer esté vacío
	UDR0 = c;  // Enviar el carácter
}

void UART_sendString(const char* str) {
	while (*str) {
 2a4:	88 81       	ld	r24, Y
 2a6:	81 11       	cpse	r24, r1
 2a8:	fa cf       	rjmp	.-12     	; 0x29e <UART_sendString+0x8>
		UART_sendChar(*str);
		str++;
	}
}
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <__udivmodsi4>:
 2b0:	a1 e2       	ldi	r26, 0x21	; 33
 2b2:	1a 2e       	mov	r1, r26
 2b4:	aa 1b       	sub	r26, r26
 2b6:	bb 1b       	sub	r27, r27
 2b8:	fd 01       	movw	r30, r26
 2ba:	0d c0       	rjmp	.+26     	; 0x2d6 <__udivmodsi4_ep>

000002bc <__udivmodsi4_loop>:
 2bc:	aa 1f       	adc	r26, r26
 2be:	bb 1f       	adc	r27, r27
 2c0:	ee 1f       	adc	r30, r30
 2c2:	ff 1f       	adc	r31, r31
 2c4:	a2 17       	cp	r26, r18
 2c6:	b3 07       	cpc	r27, r19
 2c8:	e4 07       	cpc	r30, r20
 2ca:	f5 07       	cpc	r31, r21
 2cc:	20 f0       	brcs	.+8      	; 0x2d6 <__udivmodsi4_ep>
 2ce:	a2 1b       	sub	r26, r18
 2d0:	b3 0b       	sbc	r27, r19
 2d2:	e4 0b       	sbc	r30, r20
 2d4:	f5 0b       	sbc	r31, r21

000002d6 <__udivmodsi4_ep>:
 2d6:	66 1f       	adc	r22, r22
 2d8:	77 1f       	adc	r23, r23
 2da:	88 1f       	adc	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	1a 94       	dec	r1
 2e0:	69 f7       	brne	.-38     	; 0x2bc <__udivmodsi4_loop>
 2e2:	60 95       	com	r22
 2e4:	70 95       	com	r23
 2e6:	80 95       	com	r24
 2e8:	90 95       	com	r25
 2ea:	9b 01       	movw	r18, r22
 2ec:	ac 01       	movw	r20, r24
 2ee:	bd 01       	movw	r22, r26
 2f0:	cf 01       	movw	r24, r30
 2f2:	08 95       	ret

000002f4 <snprintf>:
 2f4:	ae e0       	ldi	r26, 0x0E	; 14
 2f6:	b0 e0       	ldi	r27, 0x00	; 0
 2f8:	e0 e8       	ldi	r30, 0x80	; 128
 2fa:	f1 e0       	ldi	r31, 0x01	; 1
 2fc:	0c 94 49 04 	jmp	0x892	; 0x892 <__prologue_saves__+0x1c>
 300:	0d 89       	ldd	r16, Y+21	; 0x15
 302:	1e 89       	ldd	r17, Y+22	; 0x16
 304:	8f 89       	ldd	r24, Y+23	; 0x17
 306:	98 8d       	ldd	r25, Y+24	; 0x18
 308:	26 e0       	ldi	r18, 0x06	; 6
 30a:	2c 83       	std	Y+4, r18	; 0x04
 30c:	1a 83       	std	Y+2, r17	; 0x02
 30e:	09 83       	std	Y+1, r16	; 0x01
 310:	97 ff       	sbrs	r25, 7
 312:	02 c0       	rjmp	.+4      	; 0x318 <snprintf+0x24>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	90 e8       	ldi	r25, 0x80	; 128
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	9e 83       	std	Y+6, r25	; 0x06
 31c:	8d 83       	std	Y+5, r24	; 0x05
 31e:	ae 01       	movw	r20, r28
 320:	45 5e       	subi	r20, 0xE5	; 229
 322:	5f 4f       	sbci	r21, 0xFF	; 255
 324:	69 8d       	ldd	r22, Y+25	; 0x19
 326:	7a 8d       	ldd	r23, Y+26	; 0x1a
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	0e 94 aa 01 	call	0x354	; 0x354 <vfprintf>
 330:	4d 81       	ldd	r20, Y+5	; 0x05
 332:	5e 81       	ldd	r21, Y+6	; 0x06
 334:	57 fd       	sbrc	r21, 7
 336:	0a c0       	rjmp	.+20     	; 0x34c <snprintf+0x58>
 338:	2f 81       	ldd	r18, Y+7	; 0x07
 33a:	38 85       	ldd	r19, Y+8	; 0x08
 33c:	42 17       	cp	r20, r18
 33e:	53 07       	cpc	r21, r19
 340:	0c f4       	brge	.+2      	; 0x344 <snprintf+0x50>
 342:	9a 01       	movw	r18, r20
 344:	f8 01       	movw	r30, r16
 346:	e2 0f       	add	r30, r18
 348:	f3 1f       	adc	r31, r19
 34a:	10 82       	st	Z, r1
 34c:	2e 96       	adiw	r28, 0x0e	; 14
 34e:	e4 e0       	ldi	r30, 0x04	; 4
 350:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__epilogue_restores__+0x1c>

00000354 <vfprintf>:
 354:	ab e0       	ldi	r26, 0x0B	; 11
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e0 eb       	ldi	r30, 0xB0	; 176
 35a:	f1 e0       	ldi	r31, 0x01	; 1
 35c:	0c 94 3b 04 	jmp	0x876	; 0x876 <__prologue_saves__>
 360:	6c 01       	movw	r12, r24
 362:	7b 01       	movw	r14, r22
 364:	8a 01       	movw	r16, r20
 366:	fc 01       	movw	r30, r24
 368:	17 82       	std	Z+7, r1	; 0x07
 36a:	16 82       	std	Z+6, r1	; 0x06
 36c:	83 81       	ldd	r24, Z+3	; 0x03
 36e:	81 ff       	sbrs	r24, 1
 370:	cc c1       	rjmp	.+920    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 372:	ce 01       	movw	r24, r28
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	3c 01       	movw	r6, r24
 378:	f6 01       	movw	r30, r12
 37a:	93 81       	ldd	r25, Z+3	; 0x03
 37c:	f7 01       	movw	r30, r14
 37e:	93 fd       	sbrc	r25, 3
 380:	85 91       	lpm	r24, Z+
 382:	93 ff       	sbrs	r25, 3
 384:	81 91       	ld	r24, Z+
 386:	7f 01       	movw	r14, r30
 388:	88 23       	and	r24, r24
 38a:	09 f4       	brne	.+2      	; 0x38e <vfprintf+0x3a>
 38c:	ba c1       	rjmp	.+884    	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 38e:	85 32       	cpi	r24, 0x25	; 37
 390:	39 f4       	brne	.+14     	; 0x3a0 <vfprintf+0x4c>
 392:	93 fd       	sbrc	r25, 3
 394:	85 91       	lpm	r24, Z+
 396:	93 ff       	sbrs	r25, 3
 398:	81 91       	ld	r24, Z+
 39a:	7f 01       	movw	r14, r30
 39c:	85 32       	cpi	r24, 0x25	; 37
 39e:	29 f4       	brne	.+10     	; 0x3aa <vfprintf+0x56>
 3a0:	b6 01       	movw	r22, r12
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 3a8:	e7 cf       	rjmp	.-50     	; 0x378 <vfprintf+0x24>
 3aa:	91 2c       	mov	r9, r1
 3ac:	21 2c       	mov	r2, r1
 3ae:	31 2c       	mov	r3, r1
 3b0:	ff e1       	ldi	r31, 0x1F	; 31
 3b2:	f3 15       	cp	r31, r3
 3b4:	d8 f0       	brcs	.+54     	; 0x3ec <vfprintf+0x98>
 3b6:	8b 32       	cpi	r24, 0x2B	; 43
 3b8:	79 f0       	breq	.+30     	; 0x3d8 <vfprintf+0x84>
 3ba:	38 f4       	brcc	.+14     	; 0x3ca <vfprintf+0x76>
 3bc:	80 32       	cpi	r24, 0x20	; 32
 3be:	79 f0       	breq	.+30     	; 0x3de <vfprintf+0x8a>
 3c0:	83 32       	cpi	r24, 0x23	; 35
 3c2:	a1 f4       	brne	.+40     	; 0x3ec <vfprintf+0x98>
 3c4:	23 2d       	mov	r18, r3
 3c6:	20 61       	ori	r18, 0x10	; 16
 3c8:	1d c0       	rjmp	.+58     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3ca:	8d 32       	cpi	r24, 0x2D	; 45
 3cc:	61 f0       	breq	.+24     	; 0x3e6 <vfprintf+0x92>
 3ce:	80 33       	cpi	r24, 0x30	; 48
 3d0:	69 f4       	brne	.+26     	; 0x3ec <vfprintf+0x98>
 3d2:	23 2d       	mov	r18, r3
 3d4:	21 60       	ori	r18, 0x01	; 1
 3d6:	16 c0       	rjmp	.+44     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3d8:	83 2d       	mov	r24, r3
 3da:	82 60       	ori	r24, 0x02	; 2
 3dc:	38 2e       	mov	r3, r24
 3de:	e3 2d       	mov	r30, r3
 3e0:	e4 60       	ori	r30, 0x04	; 4
 3e2:	3e 2e       	mov	r3, r30
 3e4:	2a c0       	rjmp	.+84     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 3e6:	f3 2d       	mov	r31, r3
 3e8:	f8 60       	ori	r31, 0x08	; 8
 3ea:	1d c0       	rjmp	.+58     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 3ec:	37 fc       	sbrc	r3, 7
 3ee:	2d c0       	rjmp	.+90     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 3f0:	20 ed       	ldi	r18, 0xD0	; 208
 3f2:	28 0f       	add	r18, r24
 3f4:	2a 30       	cpi	r18, 0x0A	; 10
 3f6:	40 f0       	brcs	.+16     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3f8:	8e 32       	cpi	r24, 0x2E	; 46
 3fa:	b9 f4       	brne	.+46     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 3fc:	36 fc       	sbrc	r3, 6
 3fe:	81 c1       	rjmp	.+770    	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 400:	23 2d       	mov	r18, r3
 402:	20 64       	ori	r18, 0x40	; 64
 404:	32 2e       	mov	r3, r18
 406:	19 c0       	rjmp	.+50     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 408:	36 fe       	sbrs	r3, 6
 40a:	06 c0       	rjmp	.+12     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 40c:	8a e0       	ldi	r24, 0x0A	; 10
 40e:	98 9e       	mul	r9, r24
 410:	20 0d       	add	r18, r0
 412:	11 24       	eor	r1, r1
 414:	92 2e       	mov	r9, r18
 416:	11 c0       	rjmp	.+34     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 418:	ea e0       	ldi	r30, 0x0A	; 10
 41a:	2e 9e       	mul	r2, r30
 41c:	20 0d       	add	r18, r0
 41e:	11 24       	eor	r1, r1
 420:	22 2e       	mov	r2, r18
 422:	f3 2d       	mov	r31, r3
 424:	f0 62       	ori	r31, 0x20	; 32
 426:	3f 2e       	mov	r3, r31
 428:	08 c0       	rjmp	.+16     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 42a:	8c 36       	cpi	r24, 0x6C	; 108
 42c:	21 f4       	brne	.+8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 42e:	83 2d       	mov	r24, r3
 430:	80 68       	ori	r24, 0x80	; 128
 432:	38 2e       	mov	r3, r24
 434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 436:	88 36       	cpi	r24, 0x68	; 104
 438:	41 f4       	brne	.+16     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 43a:	f7 01       	movw	r30, r14
 43c:	93 fd       	sbrc	r25, 3
 43e:	85 91       	lpm	r24, Z+
 440:	93 ff       	sbrs	r25, 3
 442:	81 91       	ld	r24, Z+
 444:	7f 01       	movw	r14, r30
 446:	81 11       	cpse	r24, r1
 448:	b3 cf       	rjmp	.-154    	; 0x3b0 <vfprintf+0x5c>
 44a:	98 2f       	mov	r25, r24
 44c:	9f 7d       	andi	r25, 0xDF	; 223
 44e:	95 54       	subi	r25, 0x45	; 69
 450:	93 30       	cpi	r25, 0x03	; 3
 452:	28 f4       	brcc	.+10     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 454:	0c 5f       	subi	r16, 0xFC	; 252
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	9f e3       	ldi	r25, 0x3F	; 63
 45a:	99 83       	std	Y+1, r25	; 0x01
 45c:	0d c0       	rjmp	.+26     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 45e:	83 36       	cpi	r24, 0x63	; 99
 460:	31 f0       	breq	.+12     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 462:	83 37       	cpi	r24, 0x73	; 115
 464:	71 f0       	breq	.+28     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 466:	83 35       	cpi	r24, 0x53	; 83
 468:	09 f0       	breq	.+2      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 46a:	59 c0       	rjmp	.+178    	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 46c:	21 c0       	rjmp	.+66     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 46e:	f8 01       	movw	r30, r16
 470:	80 81       	ld	r24, Z
 472:	89 83       	std	Y+1, r24	; 0x01
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	88 24       	eor	r8, r8
 47a:	83 94       	inc	r8
 47c:	91 2c       	mov	r9, r1
 47e:	53 01       	movw	r10, r6
 480:	13 c0       	rjmp	.+38     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 482:	28 01       	movw	r4, r16
 484:	f2 e0       	ldi	r31, 0x02	; 2
 486:	4f 0e       	add	r4, r31
 488:	51 1c       	adc	r5, r1
 48a:	f8 01       	movw	r30, r16
 48c:	a0 80       	ld	r10, Z
 48e:	b1 80       	ldd	r11, Z+1	; 0x01
 490:	36 fe       	sbrs	r3, 6
 492:	03 c0       	rjmp	.+6      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 494:	69 2d       	mov	r22, r9
 496:	70 e0       	ldi	r23, 0x00	; 0
 498:	02 c0       	rjmp	.+4      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 49a:	6f ef       	ldi	r22, 0xFF	; 255
 49c:	7f ef       	ldi	r23, 0xFF	; 255
 49e:	c5 01       	movw	r24, r10
 4a0:	0e 94 96 03 	call	0x72c	; 0x72c <strnlen>
 4a4:	4c 01       	movw	r8, r24
 4a6:	82 01       	movw	r16, r4
 4a8:	f3 2d       	mov	r31, r3
 4aa:	ff 77       	andi	r31, 0x7F	; 127
 4ac:	3f 2e       	mov	r3, r31
 4ae:	16 c0       	rjmp	.+44     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
 4b0:	28 01       	movw	r4, r16
 4b2:	22 e0       	ldi	r18, 0x02	; 2
 4b4:	42 0e       	add	r4, r18
 4b6:	51 1c       	adc	r5, r1
 4b8:	f8 01       	movw	r30, r16
 4ba:	a0 80       	ld	r10, Z
 4bc:	b1 80       	ldd	r11, Z+1	; 0x01
 4be:	36 fe       	sbrs	r3, 6
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4c2:	69 2d       	mov	r22, r9
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4c8:	6f ef       	ldi	r22, 0xFF	; 255
 4ca:	7f ef       	ldi	r23, 0xFF	; 255
 4cc:	c5 01       	movw	r24, r10
 4ce:	0e 94 8b 03 	call	0x716	; 0x716 <strnlen_P>
 4d2:	4c 01       	movw	r8, r24
 4d4:	f3 2d       	mov	r31, r3
 4d6:	f0 68       	ori	r31, 0x80	; 128
 4d8:	3f 2e       	mov	r3, r31
 4da:	82 01       	movw	r16, r4
 4dc:	33 fc       	sbrc	r3, 3
 4de:	1b c0       	rjmp	.+54     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 4e0:	82 2d       	mov	r24, r2
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	88 16       	cp	r8, r24
 4e6:	99 06       	cpc	r9, r25
 4e8:	b0 f4       	brcc	.+44     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 4ea:	b6 01       	movw	r22, r12
 4ec:	80 e2       	ldi	r24, 0x20	; 32
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 4f4:	2a 94       	dec	r2
 4f6:	f4 cf       	rjmp	.-24     	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4f8:	f5 01       	movw	r30, r10
 4fa:	37 fc       	sbrc	r3, 7
 4fc:	85 91       	lpm	r24, Z+
 4fe:	37 fe       	sbrs	r3, 7
 500:	81 91       	ld	r24, Z+
 502:	5f 01       	movw	r10, r30
 504:	b6 01       	movw	r22, r12
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 50c:	21 10       	cpse	r2, r1
 50e:	2a 94       	dec	r2
 510:	21 e0       	ldi	r18, 0x01	; 1
 512:	82 1a       	sub	r8, r18
 514:	91 08       	sbc	r9, r1
 516:	81 14       	cp	r8, r1
 518:	91 04       	cpc	r9, r1
 51a:	71 f7       	brne	.-36     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 51c:	e8 c0       	rjmp	.+464    	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
 51e:	84 36       	cpi	r24, 0x64	; 100
 520:	11 f0       	breq	.+4      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 522:	89 36       	cpi	r24, 0x69	; 105
 524:	41 f5       	brne	.+80     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 526:	f8 01       	movw	r30, r16
 528:	37 fe       	sbrs	r3, 7
 52a:	07 c0       	rjmp	.+14     	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 52c:	60 81       	ld	r22, Z
 52e:	71 81       	ldd	r23, Z+1	; 0x01
 530:	82 81       	ldd	r24, Z+2	; 0x02
 532:	93 81       	ldd	r25, Z+3	; 0x03
 534:	0c 5f       	subi	r16, 0xFC	; 252
 536:	1f 4f       	sbci	r17, 0xFF	; 255
 538:	08 c0       	rjmp	.+16     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 53a:	60 81       	ld	r22, Z
 53c:	71 81       	ldd	r23, Z+1	; 0x01
 53e:	07 2e       	mov	r0, r23
 540:	00 0c       	add	r0, r0
 542:	88 0b       	sbc	r24, r24
 544:	99 0b       	sbc	r25, r25
 546:	0e 5f       	subi	r16, 0xFE	; 254
 548:	1f 4f       	sbci	r17, 0xFF	; 255
 54a:	f3 2d       	mov	r31, r3
 54c:	ff 76       	andi	r31, 0x6F	; 111
 54e:	3f 2e       	mov	r3, r31
 550:	97 ff       	sbrs	r25, 7
 552:	09 c0       	rjmp	.+18     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 554:	90 95       	com	r25
 556:	80 95       	com	r24
 558:	70 95       	com	r23
 55a:	61 95       	neg	r22
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	8f 4f       	sbci	r24, 0xFF	; 255
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	f0 68       	ori	r31, 0x80	; 128
 564:	3f 2e       	mov	r3, r31
 566:	2a e0       	ldi	r18, 0x0A	; 10
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	a3 01       	movw	r20, r6
 56c:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__ultoa_invert>
 570:	88 2e       	mov	r8, r24
 572:	86 18       	sub	r8, r6
 574:	45 c0       	rjmp	.+138    	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 576:	85 37       	cpi	r24, 0x75	; 117
 578:	31 f4       	brne	.+12     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 57a:	23 2d       	mov	r18, r3
 57c:	2f 7e       	andi	r18, 0xEF	; 239
 57e:	b2 2e       	mov	r11, r18
 580:	2a e0       	ldi	r18, 0x0A	; 10
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	25 c0       	rjmp	.+74     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 586:	93 2d       	mov	r25, r3
 588:	99 7f       	andi	r25, 0xF9	; 249
 58a:	b9 2e       	mov	r11, r25
 58c:	8f 36       	cpi	r24, 0x6F	; 111
 58e:	c1 f0       	breq	.+48     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 590:	18 f4       	brcc	.+6      	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 592:	88 35       	cpi	r24, 0x58	; 88
 594:	79 f0       	breq	.+30     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 596:	b5 c0       	rjmp	.+362    	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 598:	80 37       	cpi	r24, 0x70	; 112
 59a:	19 f0       	breq	.+6      	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 59c:	88 37       	cpi	r24, 0x78	; 120
 59e:	21 f0       	breq	.+8      	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5a0:	b0 c0       	rjmp	.+352    	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 5a2:	e9 2f       	mov	r30, r25
 5a4:	e0 61       	ori	r30, 0x10	; 16
 5a6:	be 2e       	mov	r11, r30
 5a8:	b4 fe       	sbrs	r11, 4
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5ac:	fb 2d       	mov	r31, r11
 5ae:	f4 60       	ori	r31, 0x04	; 4
 5b0:	bf 2e       	mov	r11, r31
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5b4:	34 fe       	sbrs	r3, 4
 5b6:	0a c0       	rjmp	.+20     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5b8:	29 2f       	mov	r18, r25
 5ba:	26 60       	ori	r18, 0x06	; 6
 5bc:	b2 2e       	mov	r11, r18
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5c0:	28 e0       	ldi	r18, 0x08	; 8
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5c6:	20 e1       	ldi	r18, 0x10	; 16
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5cc:	20 e1       	ldi	r18, 0x10	; 16
 5ce:	32 e0       	ldi	r19, 0x02	; 2
 5d0:	f8 01       	movw	r30, r16
 5d2:	b7 fe       	sbrs	r11, 7
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	82 81       	ldd	r24, Z+2	; 0x02
 5dc:	93 81       	ldd	r25, Z+3	; 0x03
 5de:	0c 5f       	subi	r16, 0xFC	; 252
 5e0:	1f 4f       	sbci	r17, 0xFF	; 255
 5e2:	06 c0       	rjmp	.+12     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	a3 01       	movw	r20, r6
 5f2:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__ultoa_invert>
 5f6:	88 2e       	mov	r8, r24
 5f8:	86 18       	sub	r8, r6
 5fa:	fb 2d       	mov	r31, r11
 5fc:	ff 77       	andi	r31, 0x7F	; 127
 5fe:	3f 2e       	mov	r3, r31
 600:	36 fe       	sbrs	r3, 6
 602:	0d c0       	rjmp	.+26     	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 604:	23 2d       	mov	r18, r3
 606:	2e 7f       	andi	r18, 0xFE	; 254
 608:	a2 2e       	mov	r10, r18
 60a:	89 14       	cp	r8, r9
 60c:	58 f4       	brcc	.+22     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 60e:	34 fe       	sbrs	r3, 4
 610:	0b c0       	rjmp	.+22     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 612:	32 fc       	sbrc	r3, 2
 614:	09 c0       	rjmp	.+18     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 616:	83 2d       	mov	r24, r3
 618:	8e 7e       	andi	r24, 0xEE	; 238
 61a:	a8 2e       	mov	r10, r24
 61c:	05 c0       	rjmp	.+10     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 61e:	b8 2c       	mov	r11, r8
 620:	a3 2c       	mov	r10, r3
 622:	03 c0       	rjmp	.+6      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 624:	b8 2c       	mov	r11, r8
 626:	01 c0       	rjmp	.+2      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 628:	b9 2c       	mov	r11, r9
 62a:	a4 fe       	sbrs	r10, 4
 62c:	0f c0       	rjmp	.+30     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 62e:	fe 01       	movw	r30, r28
 630:	e8 0d       	add	r30, r8
 632:	f1 1d       	adc	r31, r1
 634:	80 81       	ld	r24, Z
 636:	80 33       	cpi	r24, 0x30	; 48
 638:	21 f4       	brne	.+8      	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 63a:	9a 2d       	mov	r25, r10
 63c:	99 7e       	andi	r25, 0xE9	; 233
 63e:	a9 2e       	mov	r10, r25
 640:	09 c0       	rjmp	.+18     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 642:	a2 fe       	sbrs	r10, 2
 644:	06 c0       	rjmp	.+12     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 646:	b3 94       	inc	r11
 648:	b3 94       	inc	r11
 64a:	04 c0       	rjmp	.+8      	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 64c:	8a 2d       	mov	r24, r10
 64e:	86 78       	andi	r24, 0x86	; 134
 650:	09 f0       	breq	.+2      	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 652:	b3 94       	inc	r11
 654:	a3 fc       	sbrc	r10, 3
 656:	11 c0       	rjmp	.+34     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 658:	a0 fe       	sbrs	r10, 0
 65a:	06 c0       	rjmp	.+12     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 65c:	b2 14       	cp	r11, r2
 65e:	88 f4       	brcc	.+34     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 660:	28 0c       	add	r2, r8
 662:	92 2c       	mov	r9, r2
 664:	9b 18       	sub	r9, r11
 666:	0e c0       	rjmp	.+28     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 668:	b2 14       	cp	r11, r2
 66a:	60 f4       	brcc	.+24     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 66c:	b6 01       	movw	r22, r12
 66e:	80 e2       	ldi	r24, 0x20	; 32
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 676:	b3 94       	inc	r11
 678:	f7 cf       	rjmp	.-18     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 67a:	b2 14       	cp	r11, r2
 67c:	18 f4       	brcc	.+6      	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 67e:	2b 18       	sub	r2, r11
 680:	02 c0       	rjmp	.+4      	; 0x686 <__EEPROM_REGION_LENGTH__+0x286>
 682:	98 2c       	mov	r9, r8
 684:	21 2c       	mov	r2, r1
 686:	a4 fe       	sbrs	r10, 4
 688:	10 c0       	rjmp	.+32     	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 68a:	b6 01       	movw	r22, r12
 68c:	80 e3       	ldi	r24, 0x30	; 48
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 694:	a2 fe       	sbrs	r10, 2
 696:	17 c0       	rjmp	.+46     	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 698:	a1 fc       	sbrc	r10, 1
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 69c:	88 e7       	ldi	r24, 0x78	; 120
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 6a2:	88 e5       	ldi	r24, 0x58	; 88
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	b6 01       	movw	r22, r12
 6a8:	0c c0       	rjmp	.+24     	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6aa:	8a 2d       	mov	r24, r10
 6ac:	86 78       	andi	r24, 0x86	; 134
 6ae:	59 f0       	breq	.+22     	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6b0:	a1 fe       	sbrs	r10, 1
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
 6b4:	8b e2       	ldi	r24, 0x2B	; 43
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 6b8:	80 e2       	ldi	r24, 0x20	; 32
 6ba:	a7 fc       	sbrc	r10, 7
 6bc:	8d e2       	ldi	r24, 0x2D	; 45
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 6c6:	89 14       	cp	r8, r9
 6c8:	38 f4       	brcc	.+14     	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6ca:	b6 01       	movw	r22, r12
 6cc:	80 e3       	ldi	r24, 0x30	; 48
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 6d4:	9a 94       	dec	r9
 6d6:	f7 cf       	rjmp	.-18     	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6d8:	8a 94       	dec	r8
 6da:	f3 01       	movw	r30, r6
 6dc:	e8 0d       	add	r30, r8
 6de:	f1 1d       	adc	r31, r1
 6e0:	80 81       	ld	r24, Z
 6e2:	b6 01       	movw	r22, r12
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 6ea:	81 10       	cpse	r8, r1
 6ec:	f5 cf       	rjmp	.-22     	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6ee:	22 20       	and	r2, r2
 6f0:	09 f4       	brne	.+2      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 6f2:	42 ce       	rjmp	.-892    	; 0x378 <vfprintf+0x24>
 6f4:	b6 01       	movw	r22, r12
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 94 a1 03 	call	0x742	; 0x742 <fputc>
 6fe:	2a 94       	dec	r2
 700:	f6 cf       	rjmp	.-20     	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
 702:	f6 01       	movw	r30, r12
 704:	86 81       	ldd	r24, Z+6	; 0x06
 706:	97 81       	ldd	r25, Z+7	; 0x07
 708:	02 c0       	rjmp	.+4      	; 0x70e <__EEPROM_REGION_LENGTH__+0x30e>
 70a:	8f ef       	ldi	r24, 0xFF	; 255
 70c:	9f ef       	ldi	r25, 0xFF	; 255
 70e:	2b 96       	adiw	r28, 0x0b	; 11
 710:	e2 e1       	ldi	r30, 0x12	; 18
 712:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__epilogue_restores__>

00000716 <strnlen_P>:
 716:	fc 01       	movw	r30, r24
 718:	05 90       	lpm	r0, Z+
 71a:	61 50       	subi	r22, 0x01	; 1
 71c:	70 40       	sbci	r23, 0x00	; 0
 71e:	01 10       	cpse	r0, r1
 720:	d8 f7       	brcc	.-10     	; 0x718 <strnlen_P+0x2>
 722:	80 95       	com	r24
 724:	90 95       	com	r25
 726:	8e 0f       	add	r24, r30
 728:	9f 1f       	adc	r25, r31
 72a:	08 95       	ret

0000072c <strnlen>:
 72c:	fc 01       	movw	r30, r24
 72e:	61 50       	subi	r22, 0x01	; 1
 730:	70 40       	sbci	r23, 0x00	; 0
 732:	01 90       	ld	r0, Z+
 734:	01 10       	cpse	r0, r1
 736:	d8 f7       	brcc	.-10     	; 0x72e <strnlen+0x2>
 738:	80 95       	com	r24
 73a:	90 95       	com	r25
 73c:	8e 0f       	add	r24, r30
 73e:	9f 1f       	adc	r25, r31
 740:	08 95       	ret

00000742 <fputc>:
 742:	0f 93       	push	r16
 744:	1f 93       	push	r17
 746:	cf 93       	push	r28
 748:	df 93       	push	r29
 74a:	fb 01       	movw	r30, r22
 74c:	23 81       	ldd	r18, Z+3	; 0x03
 74e:	21 fd       	sbrc	r18, 1
 750:	03 c0       	rjmp	.+6      	; 0x758 <fputc+0x16>
 752:	8f ef       	ldi	r24, 0xFF	; 255
 754:	9f ef       	ldi	r25, 0xFF	; 255
 756:	2c c0       	rjmp	.+88     	; 0x7b0 <fputc+0x6e>
 758:	22 ff       	sbrs	r18, 2
 75a:	16 c0       	rjmp	.+44     	; 0x788 <fputc+0x46>
 75c:	46 81       	ldd	r20, Z+6	; 0x06
 75e:	57 81       	ldd	r21, Z+7	; 0x07
 760:	24 81       	ldd	r18, Z+4	; 0x04
 762:	35 81       	ldd	r19, Z+5	; 0x05
 764:	42 17       	cp	r20, r18
 766:	53 07       	cpc	r21, r19
 768:	44 f4       	brge	.+16     	; 0x77a <fputc+0x38>
 76a:	a0 81       	ld	r26, Z
 76c:	b1 81       	ldd	r27, Z+1	; 0x01
 76e:	9d 01       	movw	r18, r26
 770:	2f 5f       	subi	r18, 0xFF	; 255
 772:	3f 4f       	sbci	r19, 0xFF	; 255
 774:	31 83       	std	Z+1, r19	; 0x01
 776:	20 83       	st	Z, r18
 778:	8c 93       	st	X, r24
 77a:	26 81       	ldd	r18, Z+6	; 0x06
 77c:	37 81       	ldd	r19, Z+7	; 0x07
 77e:	2f 5f       	subi	r18, 0xFF	; 255
 780:	3f 4f       	sbci	r19, 0xFF	; 255
 782:	37 83       	std	Z+7, r19	; 0x07
 784:	26 83       	std	Z+6, r18	; 0x06
 786:	14 c0       	rjmp	.+40     	; 0x7b0 <fputc+0x6e>
 788:	8b 01       	movw	r16, r22
 78a:	ec 01       	movw	r28, r24
 78c:	fb 01       	movw	r30, r22
 78e:	00 84       	ldd	r0, Z+8	; 0x08
 790:	f1 85       	ldd	r31, Z+9	; 0x09
 792:	e0 2d       	mov	r30, r0
 794:	09 95       	icall
 796:	89 2b       	or	r24, r25
 798:	e1 f6       	brne	.-72     	; 0x752 <fputc+0x10>
 79a:	d8 01       	movw	r26, r16
 79c:	16 96       	adiw	r26, 0x06	; 6
 79e:	8d 91       	ld	r24, X+
 7a0:	9c 91       	ld	r25, X
 7a2:	17 97       	sbiw	r26, 0x07	; 7
 7a4:	01 96       	adiw	r24, 0x01	; 1
 7a6:	17 96       	adiw	r26, 0x07	; 7
 7a8:	9c 93       	st	X, r25
 7aa:	8e 93       	st	-X, r24
 7ac:	16 97       	sbiw	r26, 0x06	; 6
 7ae:	ce 01       	movw	r24, r28
 7b0:	df 91       	pop	r29
 7b2:	cf 91       	pop	r28
 7b4:	1f 91       	pop	r17
 7b6:	0f 91       	pop	r16
 7b8:	08 95       	ret

000007ba <__ultoa_invert>:
 7ba:	fa 01       	movw	r30, r20
 7bc:	aa 27       	eor	r26, r26
 7be:	28 30       	cpi	r18, 0x08	; 8
 7c0:	51 f1       	breq	.+84     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7c2:	20 31       	cpi	r18, 0x10	; 16
 7c4:	81 f1       	breq	.+96     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 7c6:	e8 94       	clt
 7c8:	6f 93       	push	r22
 7ca:	6e 7f       	andi	r22, 0xFE	; 254
 7cc:	6e 5f       	subi	r22, 0xFE	; 254
 7ce:	7f 4f       	sbci	r23, 0xFF	; 255
 7d0:	8f 4f       	sbci	r24, 0xFF	; 255
 7d2:	9f 4f       	sbci	r25, 0xFF	; 255
 7d4:	af 4f       	sbci	r26, 0xFF	; 255
 7d6:	b1 e0       	ldi	r27, 0x01	; 1
 7d8:	3e d0       	rcall	.+124    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 7da:	b4 e0       	ldi	r27, 0x04	; 4
 7dc:	3c d0       	rcall	.+120    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 7de:	67 0f       	add	r22, r23
 7e0:	78 1f       	adc	r23, r24
 7e2:	89 1f       	adc	r24, r25
 7e4:	9a 1f       	adc	r25, r26
 7e6:	a1 1d       	adc	r26, r1
 7e8:	68 0f       	add	r22, r24
 7ea:	79 1f       	adc	r23, r25
 7ec:	8a 1f       	adc	r24, r26
 7ee:	91 1d       	adc	r25, r1
 7f0:	a1 1d       	adc	r26, r1
 7f2:	6a 0f       	add	r22, r26
 7f4:	71 1d       	adc	r23, r1
 7f6:	81 1d       	adc	r24, r1
 7f8:	91 1d       	adc	r25, r1
 7fa:	a1 1d       	adc	r26, r1
 7fc:	20 d0       	rcall	.+64     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7fe:	09 f4       	brne	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 800:	68 94       	set
 802:	3f 91       	pop	r19
 804:	2a e0       	ldi	r18, 0x0A	; 10
 806:	26 9f       	mul	r18, r22
 808:	11 24       	eor	r1, r1
 80a:	30 19       	sub	r19, r0
 80c:	30 5d       	subi	r19, 0xD0	; 208
 80e:	31 93       	st	Z+, r19
 810:	de f6       	brtc	.-74     	; 0x7c8 <__ultoa_invert+0xe>
 812:	cf 01       	movw	r24, r30
 814:	08 95       	ret
 816:	46 2f       	mov	r20, r22
 818:	47 70       	andi	r20, 0x07	; 7
 81a:	40 5d       	subi	r20, 0xD0	; 208
 81c:	41 93       	st	Z+, r20
 81e:	b3 e0       	ldi	r27, 0x03	; 3
 820:	0f d0       	rcall	.+30     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 822:	c9 f7       	brne	.-14     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 824:	f6 cf       	rjmp	.-20     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 826:	46 2f       	mov	r20, r22
 828:	4f 70       	andi	r20, 0x0F	; 15
 82a:	40 5d       	subi	r20, 0xD0	; 208
 82c:	4a 33       	cpi	r20, 0x3A	; 58
 82e:	18 f0       	brcs	.+6      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 830:	49 5d       	subi	r20, 0xD9	; 217
 832:	31 fd       	sbrc	r19, 1
 834:	40 52       	subi	r20, 0x20	; 32
 836:	41 93       	st	Z+, r20
 838:	02 d0       	rcall	.+4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 83a:	a9 f7       	brne	.-22     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 83c:	ea cf       	rjmp	.-44     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 83e:	b4 e0       	ldi	r27, 0x04	; 4
 840:	a6 95       	lsr	r26
 842:	97 95       	ror	r25
 844:	87 95       	ror	r24
 846:	77 95       	ror	r23
 848:	67 95       	ror	r22
 84a:	ba 95       	dec	r27
 84c:	c9 f7       	brne	.-14     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 84e:	00 97       	sbiw	r24, 0x00	; 0
 850:	61 05       	cpc	r22, r1
 852:	71 05       	cpc	r23, r1
 854:	08 95       	ret
 856:	9b 01       	movw	r18, r22
 858:	ac 01       	movw	r20, r24
 85a:	0a 2e       	mov	r0, r26
 85c:	06 94       	lsr	r0
 85e:	57 95       	ror	r21
 860:	47 95       	ror	r20
 862:	37 95       	ror	r19
 864:	27 95       	ror	r18
 866:	ba 95       	dec	r27
 868:	c9 f7       	brne	.-14     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 86a:	62 0f       	add	r22, r18
 86c:	73 1f       	adc	r23, r19
 86e:	84 1f       	adc	r24, r20
 870:	95 1f       	adc	r25, r21
 872:	a0 1d       	adc	r26, r0
 874:	08 95       	ret

00000876 <__prologue_saves__>:
 876:	2f 92       	push	r2
 878:	3f 92       	push	r3
 87a:	4f 92       	push	r4
 87c:	5f 92       	push	r5
 87e:	6f 92       	push	r6
 880:	7f 92       	push	r7
 882:	8f 92       	push	r8
 884:	9f 92       	push	r9
 886:	af 92       	push	r10
 888:	bf 92       	push	r11
 88a:	cf 92       	push	r12
 88c:	df 92       	push	r13
 88e:	ef 92       	push	r14
 890:	ff 92       	push	r15
 892:	0f 93       	push	r16
 894:	1f 93       	push	r17
 896:	cf 93       	push	r28
 898:	df 93       	push	r29
 89a:	cd b7       	in	r28, 0x3d	; 61
 89c:	de b7       	in	r29, 0x3e	; 62
 89e:	ca 1b       	sub	r28, r26
 8a0:	db 0b       	sbc	r29, r27
 8a2:	0f b6       	in	r0, 0x3f	; 63
 8a4:	f8 94       	cli
 8a6:	de bf       	out	0x3e, r29	; 62
 8a8:	0f be       	out	0x3f, r0	; 63
 8aa:	cd bf       	out	0x3d, r28	; 61
 8ac:	09 94       	ijmp

000008ae <__epilogue_restores__>:
 8ae:	2a 88       	ldd	r2, Y+18	; 0x12
 8b0:	39 88       	ldd	r3, Y+17	; 0x11
 8b2:	48 88       	ldd	r4, Y+16	; 0x10
 8b4:	5f 84       	ldd	r5, Y+15	; 0x0f
 8b6:	6e 84       	ldd	r6, Y+14	; 0x0e
 8b8:	7d 84       	ldd	r7, Y+13	; 0x0d
 8ba:	8c 84       	ldd	r8, Y+12	; 0x0c
 8bc:	9b 84       	ldd	r9, Y+11	; 0x0b
 8be:	aa 84       	ldd	r10, Y+10	; 0x0a
 8c0:	b9 84       	ldd	r11, Y+9	; 0x09
 8c2:	c8 84       	ldd	r12, Y+8	; 0x08
 8c4:	df 80       	ldd	r13, Y+7	; 0x07
 8c6:	ee 80       	ldd	r14, Y+6	; 0x06
 8c8:	fd 80       	ldd	r15, Y+5	; 0x05
 8ca:	0c 81       	ldd	r16, Y+4	; 0x04
 8cc:	1b 81       	ldd	r17, Y+3	; 0x03
 8ce:	aa 81       	ldd	r26, Y+2	; 0x02
 8d0:	b9 81       	ldd	r27, Y+1	; 0x01
 8d2:	ce 0f       	add	r28, r30
 8d4:	d1 1d       	adc	r29, r1
 8d6:	0f b6       	in	r0, 0x3f	; 63
 8d8:	f8 94       	cli
 8da:	de bf       	out	0x3e, r29	; 62
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	cd bf       	out	0x3d, r28	; 61
 8e0:	ed 01       	movw	r28, r26
 8e2:	08 95       	ret

000008e4 <_exit>:
 8e4:	f8 94       	cli

000008e6 <__stop_program>:
 8e6:	ff cf       	rjmp	.-2      	; 0x8e6 <__stop_program>
