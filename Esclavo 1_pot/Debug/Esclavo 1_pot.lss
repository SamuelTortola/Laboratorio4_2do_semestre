
Esclavo 1_pot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ac  00800100  0000088a  0000091e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000088a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000042  008001ac  008001ac  000009ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ac2  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088a  00000000  00000000  000015c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000535  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  00002384  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047f  00000000  00000000  000024a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001e1  00000000  00000000  00002927  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002b08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e8       	ldi	r30, 0x8A	; 138
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 3a       	cpi	r26, 0xAC	; 172
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac ea       	ldi	r26, 0xAC	; 172
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 3e       	cpi	r26, 0xEE	; 238
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
  9e:	0c 94 43 04 	jmp	0x886	; 0x886 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initADC>:
#include "ADC.h"

void initADC(){
	
	ADMUX = 0;
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
	DIDR0 |= (1 <<ADC0D);	//desabilitar el A0 como digital
  ac:	ae e7       	ldi	r26, 0x7E	; 126
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	8c 91       	ld	r24, X
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	8c 93       	st	X, r24

	//JUSTIFICACION IZQUIERDA
	ADMUX |= (1<<ADLAR);
  b6:	80 81       	ld	r24, Z
  b8:	80 62       	ori	r24, 0x20	; 32
  ba:	80 83       	st	Z, r24
	//REFERENCIA INTERNA
	ADMUX |= (1<<REFS0);
  bc:	80 81       	ld	r24, Z
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);
  c2:	80 81       	ld	r24, Z
  c4:	8f 77       	andi	r24, 0x7F	; 127
  c6:	80 83       	st	Z, r24
	// HABILITAR INTERRUPCION
	ADCSRA |= (1<<ADIE);
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
	//PRESCALER 128
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);  //Habilitando prescaler de 16M/128 frecuencia = 125Khz
  d2:	80 81       	ld	r24, Z
  d4:	87 60       	ori	r24, 0x07	; 7
  d6:	80 83       	st	Z, r24
	//HABILITAR ADC
	ADCSRA |= (1<<ADEN);
  d8:	80 81       	ld	r24, Z
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
  de:	08 95       	ret

000000e0 <__vector_21>:
}

////////////////////////////////////////////////////
// Vectores de interrupciones
////////////////////////////////////////////////////
ISR(ADC_vect) {
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
    datoADC = ADC;  // Lectura de potenciómetro (16 bits: ADCL y ADCH)
  f2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  f6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  fa:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <__data_end+0x1>
  fe:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <__data_end>
    ADCSRA |= (1 << ADIF); // Borrar la bandera de interrupción
 102:	ea e7       	ldi	r30, 0x7A	; 122
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	80 61       	ori	r24, 0x10	; 16
 10a:	80 83       	st	Z, r24
}
 10c:	ff 91       	pop	r31
 10e:	ef 91       	pop	r30
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <display_menu>:

////////////////////////////////////////////////////
// Funciones auxiliares
////////////////////////////////////////////////////
void display_menu(void) {
    UART_TransmitString("\r\n***** Menu *****\r\n");
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
    UART_TransmitString("1. Mostrar valores de ADC\r\n");
 126:	85 e1       	ldi	r24, 0x15	; 21
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
    UART_TransmitString("*****************\r\n");
 12e:	81 e3       	ldi	r24, 0x31	; 49
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
    UART_TransmitString("Seleccione una opción: ");
 136:	85 e4       	ldi	r24, 0x45	; 69
 138:	91 e0       	ldi	r25, 0x01	; 1
 13a:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
 13e:	08 95       	ret

00000140 <setup>:

////////////////////////////////////////////////////
// Sub-Rutinas
////////////////////////////////////////////////////
void setup(void){
    cli();  // Desactivar interrupciones
 140:	f8 94       	cli
    DDRC = 0;  // Puerto C como entrada
 142:	17 b8       	out	0x07, r1	; 7
    initADC(); // Iniciar ADC
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <initADC>
    UART_Init(BAUD);  // Inicializar UART
 148:	60 e8       	ldi	r22, 0x80	; 128
 14a:	75 e2       	ldi	r23, 0x25	; 37
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <UART_Init>
    //I2C_Config_SLAVE(0x02); // Inicializar I2C como esclavo con dirección 0x02
    display_menu(); // Mostrar el menú inicial en la consola
 154:	0e 94 8f 00 	call	0x11e	; 0x11e <display_menu>
    sei(); // Activar interrupciones
 158:	78 94       	sei
 15a:	08 95       	ret

0000015c <process_command>:
    UART_TransmitString("*****************\r\n");
    UART_TransmitString("Seleccione una opción: ");
}

void process_command(char command) {
    switch (command) {
 15c:	81 33       	cpi	r24, 0x31	; 49
 15e:	01 f5       	brne	.+64     	; 0x1a0 <process_command+0x44>
        case '1':
            snprintf(buffer, sizeof(buffer), "Valores ADC: %u\r\n", datoADC);
 160:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <__data_end>
 164:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <__data_end+0x1>
 168:	9f 93       	push	r25
 16a:	8f 93       	push	r24
 16c:	8d e5       	ldi	r24, 0x5D	; 93
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	9f 93       	push	r25
 172:	8f 93       	push	r24
 174:	1f 92       	push	r1
 176:	80 e4       	ldi	r24, 0x40	; 64
 178:	8f 93       	push	r24
 17a:	8e ea       	ldi	r24, 0xAE	; 174
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	9f 93       	push	r25
 180:	8f 93       	push	r24
 182:	0e 94 4b 01 	call	0x296	; 0x296 <snprintf>
            UART_TransmitString(buffer);
 186:	8e ea       	ldi	r24, 0xAE	; 174
 188:	91 e0       	ldi	r25, 0x01	; 1
 18a:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
            break;
 18e:	8d b7       	in	r24, 0x3d	; 61
 190:	9e b7       	in	r25, 0x3e	; 62
 192:	08 96       	adiw	r24, 0x08	; 8
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	f8 94       	cli
 198:	9e bf       	out	0x3e, r25	; 62
 19a:	0f be       	out	0x3f, r0	; 63
 19c:	8d bf       	out	0x3d, r24	; 61
 19e:	04 c0       	rjmp	.+8      	; 0x1a8 <process_command+0x4c>
        default:
            UART_TransmitString("Opción inválida. Por favor, seleccione una opción válida.\r\n");
 1a0:	8f e6       	ldi	r24, 0x6F	; 111
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	0e 94 1c 01 	call	0x238	; 0x238 <UART_TransmitString>
            break;
    }
    display_menu();
 1a8:	0e 94 8f 00 	call	0x11e	; 0x11e <display_menu>
 1ac:	08 95       	ret

000001ae <main>:

////////////////////////////////////////////////////
// Programa Principal
////////////////////////////////////////////////////
int main(void) {
    setup();
 1ae:	0e 94 a0 00 	call	0x140	; 0x140 <setup>

    while (1) {
        // Leer ADC y actualizar datoADC en la ISR
        ADCSRA |= (1 << ADSC);  // Iniciar conversión ADC
 1b2:	ea e7       	ldi	r30, 0x7A	; 122
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	80 64       	ori	r24, 0x40	; 64
 1ba:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1bc:	2f ef       	ldi	r18, 0xFF	; 255
 1be:	89 ef       	ldi	r24, 0xF9	; 249
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	21 50       	subi	r18, 0x01	; 1
 1c4:	80 40       	sbci	r24, 0x00	; 0
 1c6:	90 40       	sbci	r25, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x14>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x1e>
 1cc:	00 00       	nop
        _delay_ms(20);   // Retardo para evitar malos procesamientos del Atmega

        // Leer y procesar los comandos de la UART
        if (UCSR0A & (1 << RXC0)) {  // Verificar si hay datos disponibles en el buffer de recepción
 1ce:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1d2:	88 23       	and	r24, r24
 1d4:	24 f4       	brge	.+8      	; 0x1de <main+0x30>
            char received_char = UART_Receive();
 1d6:	0e 94 15 01 	call	0x22a	; 0x22a <UART_Receive>
            process_command(received_char);
 1da:	0e 94 ae 00 	call	0x15c	; 0x15c <process_command>
 1de:	2f ef       	ldi	r18, 0xFF	; 255
 1e0:	89 e6       	ldi	r24, 0x69	; 105
 1e2:	98 e1       	ldi	r25, 0x18	; 24
 1e4:	21 50       	subi	r18, 0x01	; 1
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	90 40       	sbci	r25, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0x36>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x40>
 1ee:	00 00       	nop
 1f0:	e0 cf       	rjmp	.-64     	; 0x1b2 <main+0x4>

000001f2 <UART_Init>:
#include <stdio.h>
#include <stdlib.h>
#include <util/delay.h>
#include "UART.h"

void UART_Init(unsigned long baud_rate) {
 1f2:	9b 01       	movw	r18, r22
 1f4:	ac 01       	movw	r20, r24
	unsigned int ubrr = F_CPU / 16 / baud_rate - 1;
 1f6:	64 e2       	ldi	r22, 0x24	; 36
 1f8:	74 ef       	ldi	r23, 0xF4	; 244
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 29 01 	call	0x252	; 0x252 <__udivmodsi4>
 202:	21 50       	subi	r18, 0x01	; 1
 204:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned char)(ubrr >> 8);
 206:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 20a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);  // Habilitar el receptor y el transmisor
 20e:	88 e1       	ldi	r24, 0x18	; 24
 210:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configurar el formato de datos: 8 bits
 214:	86 e0       	ldi	r24, 0x06	; 6
 216:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 21a:	08 95       	ret

0000021c <UART_Transmit>:
}

void UART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0)));  // Esperar a que el buffer de transmisión esté vacío
 21c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 220:	95 ff       	sbrs	r25, 5
 222:	fc cf       	rjmp	.-8      	; 0x21c <UART_Transmit>
	UDR0 = data;  // Enviar el dato
 224:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 228:	08 95       	ret

0000022a <UART_Receive>:
}

unsigned char UART_Receive(void) {
	while (!(UCSR0A & (1 << RXC0)));  // Esperar a que los datos estén disponibles
 22a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 22e:	88 23       	and	r24, r24
 230:	e4 f7       	brge	.-8      	; 0x22a <UART_Receive>
	return UDR0;  // Leer el dato recibido
 232:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 236:	08 95       	ret

00000238 <UART_TransmitString>:

void UART_TransmitString(const char *str) {
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	ec 01       	movw	r28, r24
	while (*str) {
 23e:	03 c0       	rjmp	.+6      	; 0x246 <UART_TransmitString+0xe>
		UART_Transmit(*str++);
 240:	21 96       	adiw	r28, 0x01	; 1
 242:	0e 94 0e 01 	call	0x21c	; 0x21c <UART_Transmit>
	while (!(UCSR0A & (1 << RXC0)));  // Esperar a que los datos estén disponibles
	return UDR0;  // Leer el dato recibido
}

void UART_TransmitString(const char *str) {
	while (*str) {
 246:	88 81       	ld	r24, Y
 248:	81 11       	cpse	r24, r1
 24a:	fa cf       	rjmp	.-12     	; 0x240 <UART_TransmitString+0x8>
		UART_Transmit(*str++);
	}
}
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	08 95       	ret

00000252 <__udivmodsi4>:
 252:	a1 e2       	ldi	r26, 0x21	; 33
 254:	1a 2e       	mov	r1, r26
 256:	aa 1b       	sub	r26, r26
 258:	bb 1b       	sub	r27, r27
 25a:	fd 01       	movw	r30, r26
 25c:	0d c0       	rjmp	.+26     	; 0x278 <__udivmodsi4_ep>

0000025e <__udivmodsi4_loop>:
 25e:	aa 1f       	adc	r26, r26
 260:	bb 1f       	adc	r27, r27
 262:	ee 1f       	adc	r30, r30
 264:	ff 1f       	adc	r31, r31
 266:	a2 17       	cp	r26, r18
 268:	b3 07       	cpc	r27, r19
 26a:	e4 07       	cpc	r30, r20
 26c:	f5 07       	cpc	r31, r21
 26e:	20 f0       	brcs	.+8      	; 0x278 <__udivmodsi4_ep>
 270:	a2 1b       	sub	r26, r18
 272:	b3 0b       	sbc	r27, r19
 274:	e4 0b       	sbc	r30, r20
 276:	f5 0b       	sbc	r31, r21

00000278 <__udivmodsi4_ep>:
 278:	66 1f       	adc	r22, r22
 27a:	77 1f       	adc	r23, r23
 27c:	88 1f       	adc	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	1a 94       	dec	r1
 282:	69 f7       	brne	.-38     	; 0x25e <__udivmodsi4_loop>
 284:	60 95       	com	r22
 286:	70 95       	com	r23
 288:	80 95       	com	r24
 28a:	90 95       	com	r25
 28c:	9b 01       	movw	r18, r22
 28e:	ac 01       	movw	r20, r24
 290:	bd 01       	movw	r22, r26
 292:	cf 01       	movw	r24, r30
 294:	08 95       	ret

00000296 <snprintf>:
 296:	ae e0       	ldi	r26, 0x0E	; 14
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	e1 e5       	ldi	r30, 0x51	; 81
 29c:	f1 e0       	ldi	r31, 0x01	; 1
 29e:	0c 94 1a 04 	jmp	0x834	; 0x834 <__prologue_saves__+0x1c>
 2a2:	0d 89       	ldd	r16, Y+21	; 0x15
 2a4:	1e 89       	ldd	r17, Y+22	; 0x16
 2a6:	8f 89       	ldd	r24, Y+23	; 0x17
 2a8:	98 8d       	ldd	r25, Y+24	; 0x18
 2aa:	26 e0       	ldi	r18, 0x06	; 6
 2ac:	2c 83       	std	Y+4, r18	; 0x04
 2ae:	1a 83       	std	Y+2, r17	; 0x02
 2b0:	09 83       	std	Y+1, r16	; 0x01
 2b2:	97 ff       	sbrs	r25, 7
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <snprintf+0x24>
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e8       	ldi	r25, 0x80	; 128
 2ba:	01 97       	sbiw	r24, 0x01	; 1
 2bc:	9e 83       	std	Y+6, r25	; 0x06
 2be:	8d 83       	std	Y+5, r24	; 0x05
 2c0:	ae 01       	movw	r20, r28
 2c2:	45 5e       	subi	r20, 0xE5	; 229
 2c4:	5f 4f       	sbci	r21, 0xFF	; 255
 2c6:	69 8d       	ldd	r22, Y+25	; 0x19
 2c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
 2ca:	ce 01       	movw	r24, r28
 2cc:	01 96       	adiw	r24, 0x01	; 1
 2ce:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <vfprintf>
 2d2:	4d 81       	ldd	r20, Y+5	; 0x05
 2d4:	5e 81       	ldd	r21, Y+6	; 0x06
 2d6:	57 fd       	sbrc	r21, 7
 2d8:	0a c0       	rjmp	.+20     	; 0x2ee <snprintf+0x58>
 2da:	2f 81       	ldd	r18, Y+7	; 0x07
 2dc:	38 85       	ldd	r19, Y+8	; 0x08
 2de:	42 17       	cp	r20, r18
 2e0:	53 07       	cpc	r21, r19
 2e2:	0c f4       	brge	.+2      	; 0x2e6 <snprintf+0x50>
 2e4:	9a 01       	movw	r18, r20
 2e6:	f8 01       	movw	r30, r16
 2e8:	e2 0f       	add	r30, r18
 2ea:	f3 1f       	adc	r31, r19
 2ec:	10 82       	st	Z, r1
 2ee:	2e 96       	adiw	r28, 0x0e	; 14
 2f0:	e4 e0       	ldi	r30, 0x04	; 4
 2f2:	0c 94 36 04 	jmp	0x86c	; 0x86c <__epilogue_restores__+0x1c>

000002f6 <vfprintf>:
 2f6:	ab e0       	ldi	r26, 0x0B	; 11
 2f8:	b0 e0       	ldi	r27, 0x00	; 0
 2fa:	e1 e8       	ldi	r30, 0x81	; 129
 2fc:	f1 e0       	ldi	r31, 0x01	; 1
 2fe:	0c 94 0c 04 	jmp	0x818	; 0x818 <__prologue_saves__>
 302:	6c 01       	movw	r12, r24
 304:	7b 01       	movw	r14, r22
 306:	8a 01       	movw	r16, r20
 308:	fc 01       	movw	r30, r24
 30a:	17 82       	std	Z+7, r1	; 0x07
 30c:	16 82       	std	Z+6, r1	; 0x06
 30e:	83 81       	ldd	r24, Z+3	; 0x03
 310:	81 ff       	sbrs	r24, 1
 312:	cc c1       	rjmp	.+920    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 314:	ce 01       	movw	r24, r28
 316:	01 96       	adiw	r24, 0x01	; 1
 318:	3c 01       	movw	r6, r24
 31a:	f6 01       	movw	r30, r12
 31c:	93 81       	ldd	r25, Z+3	; 0x03
 31e:	f7 01       	movw	r30, r14
 320:	93 fd       	sbrc	r25, 3
 322:	85 91       	lpm	r24, Z+
 324:	93 ff       	sbrs	r25, 3
 326:	81 91       	ld	r24, Z+
 328:	7f 01       	movw	r14, r30
 32a:	88 23       	and	r24, r24
 32c:	09 f4       	brne	.+2      	; 0x330 <vfprintf+0x3a>
 32e:	ba c1       	rjmp	.+884    	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 330:	85 32       	cpi	r24, 0x25	; 37
 332:	39 f4       	brne	.+14     	; 0x342 <vfprintf+0x4c>
 334:	93 fd       	sbrc	r25, 3
 336:	85 91       	lpm	r24, Z+
 338:	93 ff       	sbrs	r25, 3
 33a:	81 91       	ld	r24, Z+
 33c:	7f 01       	movw	r14, r30
 33e:	85 32       	cpi	r24, 0x25	; 37
 340:	29 f4       	brne	.+10     	; 0x34c <vfprintf+0x56>
 342:	b6 01       	movw	r22, r12
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 34a:	e7 cf       	rjmp	.-50     	; 0x31a <vfprintf+0x24>
 34c:	91 2c       	mov	r9, r1
 34e:	21 2c       	mov	r2, r1
 350:	31 2c       	mov	r3, r1
 352:	ff e1       	ldi	r31, 0x1F	; 31
 354:	f3 15       	cp	r31, r3
 356:	d8 f0       	brcs	.+54     	; 0x38e <vfprintf+0x98>
 358:	8b 32       	cpi	r24, 0x2B	; 43
 35a:	79 f0       	breq	.+30     	; 0x37a <vfprintf+0x84>
 35c:	38 f4       	brcc	.+14     	; 0x36c <vfprintf+0x76>
 35e:	80 32       	cpi	r24, 0x20	; 32
 360:	79 f0       	breq	.+30     	; 0x380 <vfprintf+0x8a>
 362:	83 32       	cpi	r24, 0x23	; 35
 364:	a1 f4       	brne	.+40     	; 0x38e <vfprintf+0x98>
 366:	23 2d       	mov	r18, r3
 368:	20 61       	ori	r18, 0x10	; 16
 36a:	1d c0       	rjmp	.+58     	; 0x3a6 <vfprintf+0xb0>
 36c:	8d 32       	cpi	r24, 0x2D	; 45
 36e:	61 f0       	breq	.+24     	; 0x388 <vfprintf+0x92>
 370:	80 33       	cpi	r24, 0x30	; 48
 372:	69 f4       	brne	.+26     	; 0x38e <vfprintf+0x98>
 374:	23 2d       	mov	r18, r3
 376:	21 60       	ori	r18, 0x01	; 1
 378:	16 c0       	rjmp	.+44     	; 0x3a6 <vfprintf+0xb0>
 37a:	83 2d       	mov	r24, r3
 37c:	82 60       	ori	r24, 0x02	; 2
 37e:	38 2e       	mov	r3, r24
 380:	e3 2d       	mov	r30, r3
 382:	e4 60       	ori	r30, 0x04	; 4
 384:	3e 2e       	mov	r3, r30
 386:	2a c0       	rjmp	.+84     	; 0x3dc <vfprintf+0xe6>
 388:	f3 2d       	mov	r31, r3
 38a:	f8 60       	ori	r31, 0x08	; 8
 38c:	1d c0       	rjmp	.+58     	; 0x3c8 <vfprintf+0xd2>
 38e:	37 fc       	sbrc	r3, 7
 390:	2d c0       	rjmp	.+90     	; 0x3ec <vfprintf+0xf6>
 392:	20 ed       	ldi	r18, 0xD0	; 208
 394:	28 0f       	add	r18, r24
 396:	2a 30       	cpi	r18, 0x0A	; 10
 398:	40 f0       	brcs	.+16     	; 0x3aa <vfprintf+0xb4>
 39a:	8e 32       	cpi	r24, 0x2E	; 46
 39c:	b9 f4       	brne	.+46     	; 0x3cc <vfprintf+0xd6>
 39e:	36 fc       	sbrc	r3, 6
 3a0:	81 c1       	rjmp	.+770    	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 3a2:	23 2d       	mov	r18, r3
 3a4:	20 64       	ori	r18, 0x40	; 64
 3a6:	32 2e       	mov	r3, r18
 3a8:	19 c0       	rjmp	.+50     	; 0x3dc <vfprintf+0xe6>
 3aa:	36 fe       	sbrs	r3, 6
 3ac:	06 c0       	rjmp	.+12     	; 0x3ba <vfprintf+0xc4>
 3ae:	8a e0       	ldi	r24, 0x0A	; 10
 3b0:	98 9e       	mul	r9, r24
 3b2:	20 0d       	add	r18, r0
 3b4:	11 24       	eor	r1, r1
 3b6:	92 2e       	mov	r9, r18
 3b8:	11 c0       	rjmp	.+34     	; 0x3dc <vfprintf+0xe6>
 3ba:	ea e0       	ldi	r30, 0x0A	; 10
 3bc:	2e 9e       	mul	r2, r30
 3be:	20 0d       	add	r18, r0
 3c0:	11 24       	eor	r1, r1
 3c2:	22 2e       	mov	r2, r18
 3c4:	f3 2d       	mov	r31, r3
 3c6:	f0 62       	ori	r31, 0x20	; 32
 3c8:	3f 2e       	mov	r3, r31
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <vfprintf+0xe6>
 3cc:	8c 36       	cpi	r24, 0x6C	; 108
 3ce:	21 f4       	brne	.+8      	; 0x3d8 <vfprintf+0xe2>
 3d0:	83 2d       	mov	r24, r3
 3d2:	80 68       	ori	r24, 0x80	; 128
 3d4:	38 2e       	mov	r3, r24
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <vfprintf+0xe6>
 3d8:	88 36       	cpi	r24, 0x68	; 104
 3da:	41 f4       	brne	.+16     	; 0x3ec <vfprintf+0xf6>
 3dc:	f7 01       	movw	r30, r14
 3de:	93 fd       	sbrc	r25, 3
 3e0:	85 91       	lpm	r24, Z+
 3e2:	93 ff       	sbrs	r25, 3
 3e4:	81 91       	ld	r24, Z+
 3e6:	7f 01       	movw	r14, r30
 3e8:	81 11       	cpse	r24, r1
 3ea:	b3 cf       	rjmp	.-154    	; 0x352 <vfprintf+0x5c>
 3ec:	98 2f       	mov	r25, r24
 3ee:	9f 7d       	andi	r25, 0xDF	; 223
 3f0:	95 54       	subi	r25, 0x45	; 69
 3f2:	93 30       	cpi	r25, 0x03	; 3
 3f4:	28 f4       	brcc	.+10     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3f6:	0c 5f       	subi	r16, 0xFC	; 252
 3f8:	1f 4f       	sbci	r17, 0xFF	; 255
 3fa:	9f e3       	ldi	r25, 0x3F	; 63
 3fc:	99 83       	std	Y+1, r25	; 0x01
 3fe:	0d c0       	rjmp	.+26     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 400:	83 36       	cpi	r24, 0x63	; 99
 402:	31 f0       	breq	.+12     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 404:	83 37       	cpi	r24, 0x73	; 115
 406:	71 f0       	breq	.+28     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 408:	83 35       	cpi	r24, 0x53	; 83
 40a:	09 f0       	breq	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40c:	59 c0       	rjmp	.+178    	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 40e:	21 c0       	rjmp	.+66     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 410:	f8 01       	movw	r30, r16
 412:	80 81       	ld	r24, Z
 414:	89 83       	std	Y+1, r24	; 0x01
 416:	0e 5f       	subi	r16, 0xFE	; 254
 418:	1f 4f       	sbci	r17, 0xFF	; 255
 41a:	88 24       	eor	r8, r8
 41c:	83 94       	inc	r8
 41e:	91 2c       	mov	r9, r1
 420:	53 01       	movw	r10, r6
 422:	13 c0       	rjmp	.+38     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 424:	28 01       	movw	r4, r16
 426:	f2 e0       	ldi	r31, 0x02	; 2
 428:	4f 0e       	add	r4, r31
 42a:	51 1c       	adc	r5, r1
 42c:	f8 01       	movw	r30, r16
 42e:	a0 80       	ld	r10, Z
 430:	b1 80       	ldd	r11, Z+1	; 0x01
 432:	36 fe       	sbrs	r3, 6
 434:	03 c0       	rjmp	.+6      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 436:	69 2d       	mov	r22, r9
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43c:	6f ef       	ldi	r22, 0xFF	; 255
 43e:	7f ef       	ldi	r23, 0xFF	; 255
 440:	c5 01       	movw	r24, r10
 442:	0e 94 67 03 	call	0x6ce	; 0x6ce <strnlen>
 446:	4c 01       	movw	r8, r24
 448:	82 01       	movw	r16, r4
 44a:	f3 2d       	mov	r31, r3
 44c:	ff 77       	andi	r31, 0x7F	; 127
 44e:	3f 2e       	mov	r3, r31
 450:	16 c0       	rjmp	.+44     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 452:	28 01       	movw	r4, r16
 454:	22 e0       	ldi	r18, 0x02	; 2
 456:	42 0e       	add	r4, r18
 458:	51 1c       	adc	r5, r1
 45a:	f8 01       	movw	r30, r16
 45c:	a0 80       	ld	r10, Z
 45e:	b1 80       	ldd	r11, Z+1	; 0x01
 460:	36 fe       	sbrs	r3, 6
 462:	03 c0       	rjmp	.+6      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 464:	69 2d       	mov	r22, r9
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	02 c0       	rjmp	.+4      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 46a:	6f ef       	ldi	r22, 0xFF	; 255
 46c:	7f ef       	ldi	r23, 0xFF	; 255
 46e:	c5 01       	movw	r24, r10
 470:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <strnlen_P>
 474:	4c 01       	movw	r8, r24
 476:	f3 2d       	mov	r31, r3
 478:	f0 68       	ori	r31, 0x80	; 128
 47a:	3f 2e       	mov	r3, r31
 47c:	82 01       	movw	r16, r4
 47e:	33 fc       	sbrc	r3, 3
 480:	1b c0       	rjmp	.+54     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 482:	82 2d       	mov	r24, r2
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	88 16       	cp	r8, r24
 488:	99 06       	cpc	r9, r25
 48a:	b0 f4       	brcc	.+44     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 48c:	b6 01       	movw	r22, r12
 48e:	80 e2       	ldi	r24, 0x20	; 32
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 496:	2a 94       	dec	r2
 498:	f4 cf       	rjmp	.-24     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 49a:	f5 01       	movw	r30, r10
 49c:	37 fc       	sbrc	r3, 7
 49e:	85 91       	lpm	r24, Z+
 4a0:	37 fe       	sbrs	r3, 7
 4a2:	81 91       	ld	r24, Z+
 4a4:	5f 01       	movw	r10, r30
 4a6:	b6 01       	movw	r22, r12
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 4ae:	21 10       	cpse	r2, r1
 4b0:	2a 94       	dec	r2
 4b2:	21 e0       	ldi	r18, 0x01	; 1
 4b4:	82 1a       	sub	r8, r18
 4b6:	91 08       	sbc	r9, r1
 4b8:	81 14       	cp	r8, r1
 4ba:	91 04       	cpc	r9, r1
 4bc:	71 f7       	brne	.-36     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 4be:	e8 c0       	rjmp	.+464    	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 4c0:	84 36       	cpi	r24, 0x64	; 100
 4c2:	11 f0       	breq	.+4      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4c4:	89 36       	cpi	r24, 0x69	; 105
 4c6:	41 f5       	brne	.+80     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 4c8:	f8 01       	movw	r30, r16
 4ca:	37 fe       	sbrs	r3, 7
 4cc:	07 c0       	rjmp	.+14     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
 4ce:	60 81       	ld	r22, Z
 4d0:	71 81       	ldd	r23, Z+1	; 0x01
 4d2:	82 81       	ldd	r24, Z+2	; 0x02
 4d4:	93 81       	ldd	r25, Z+3	; 0x03
 4d6:	0c 5f       	subi	r16, 0xFC	; 252
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	08 c0       	rjmp	.+16     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4dc:	60 81       	ld	r22, Z
 4de:	71 81       	ldd	r23, Z+1	; 0x01
 4e0:	07 2e       	mov	r0, r23
 4e2:	00 0c       	add	r0, r0
 4e4:	88 0b       	sbc	r24, r24
 4e6:	99 0b       	sbc	r25, r25
 4e8:	0e 5f       	subi	r16, 0xFE	; 254
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	f3 2d       	mov	r31, r3
 4ee:	ff 76       	andi	r31, 0x6F	; 111
 4f0:	3f 2e       	mov	r3, r31
 4f2:	97 ff       	sbrs	r25, 7
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4f6:	90 95       	com	r25
 4f8:	80 95       	com	r24
 4fa:	70 95       	com	r23
 4fc:	61 95       	neg	r22
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	f0 68       	ori	r31, 0x80	; 128
 506:	3f 2e       	mov	r3, r31
 508:	2a e0       	ldi	r18, 0x0A	; 10
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	a3 01       	movw	r20, r6
 50e:	0e 94 ae 03 	call	0x75c	; 0x75c <__ultoa_invert>
 512:	88 2e       	mov	r8, r24
 514:	86 18       	sub	r8, r6
 516:	45 c0       	rjmp	.+138    	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 518:	85 37       	cpi	r24, 0x75	; 117
 51a:	31 f4       	brne	.+12     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 51c:	23 2d       	mov	r18, r3
 51e:	2f 7e       	andi	r18, 0xEF	; 239
 520:	b2 2e       	mov	r11, r18
 522:	2a e0       	ldi	r18, 0x0A	; 10
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	25 c0       	rjmp	.+74     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 528:	93 2d       	mov	r25, r3
 52a:	99 7f       	andi	r25, 0xF9	; 249
 52c:	b9 2e       	mov	r11, r25
 52e:	8f 36       	cpi	r24, 0x6F	; 111
 530:	c1 f0       	breq	.+48     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 532:	18 f4       	brcc	.+6      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 534:	88 35       	cpi	r24, 0x58	; 88
 536:	79 f0       	breq	.+30     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 538:	b5 c0       	rjmp	.+362    	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 53a:	80 37       	cpi	r24, 0x70	; 112
 53c:	19 f0       	breq	.+6      	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 53e:	88 37       	cpi	r24, 0x78	; 120
 540:	21 f0       	breq	.+8      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 542:	b0 c0       	rjmp	.+352    	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 544:	e9 2f       	mov	r30, r25
 546:	e0 61       	ori	r30, 0x10	; 16
 548:	be 2e       	mov	r11, r30
 54a:	b4 fe       	sbrs	r11, 4
 54c:	0d c0       	rjmp	.+26     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 54e:	fb 2d       	mov	r31, r11
 550:	f4 60       	ori	r31, 0x04	; 4
 552:	bf 2e       	mov	r11, r31
 554:	09 c0       	rjmp	.+18     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 556:	34 fe       	sbrs	r3, 4
 558:	0a c0       	rjmp	.+20     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 55a:	29 2f       	mov	r18, r25
 55c:	26 60       	ori	r18, 0x06	; 6
 55e:	b2 2e       	mov	r11, r18
 560:	06 c0       	rjmp	.+12     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 562:	28 e0       	ldi	r18, 0x08	; 8
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	05 c0       	rjmp	.+10     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 568:	20 e1       	ldi	r18, 0x10	; 16
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 56e:	20 e1       	ldi	r18, 0x10	; 16
 570:	32 e0       	ldi	r19, 0x02	; 2
 572:	f8 01       	movw	r30, r16
 574:	b7 fe       	sbrs	r11, 7
 576:	07 c0       	rjmp	.+14     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 578:	60 81       	ld	r22, Z
 57a:	71 81       	ldd	r23, Z+1	; 0x01
 57c:	82 81       	ldd	r24, Z+2	; 0x02
 57e:	93 81       	ldd	r25, Z+3	; 0x03
 580:	0c 5f       	subi	r16, 0xFC	; 252
 582:	1f 4f       	sbci	r17, 0xFF	; 255
 584:	06 c0       	rjmp	.+12     	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 586:	60 81       	ld	r22, Z
 588:	71 81       	ldd	r23, Z+1	; 0x01
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 5f       	subi	r16, 0xFE	; 254
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	a3 01       	movw	r20, r6
 594:	0e 94 ae 03 	call	0x75c	; 0x75c <__ultoa_invert>
 598:	88 2e       	mov	r8, r24
 59a:	86 18       	sub	r8, r6
 59c:	fb 2d       	mov	r31, r11
 59e:	ff 77       	andi	r31, 0x7F	; 127
 5a0:	3f 2e       	mov	r3, r31
 5a2:	36 fe       	sbrs	r3, 6
 5a4:	0d c0       	rjmp	.+26     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5a6:	23 2d       	mov	r18, r3
 5a8:	2e 7f       	andi	r18, 0xFE	; 254
 5aa:	a2 2e       	mov	r10, r18
 5ac:	89 14       	cp	r8, r9
 5ae:	58 f4       	brcc	.+22     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5b0:	34 fe       	sbrs	r3, 4
 5b2:	0b c0       	rjmp	.+22     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5b4:	32 fc       	sbrc	r3, 2
 5b6:	09 c0       	rjmp	.+18     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5b8:	83 2d       	mov	r24, r3
 5ba:	8e 7e       	andi	r24, 0xEE	; 238
 5bc:	a8 2e       	mov	r10, r24
 5be:	05 c0       	rjmp	.+10     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5c0:	b8 2c       	mov	r11, r8
 5c2:	a3 2c       	mov	r10, r3
 5c4:	03 c0       	rjmp	.+6      	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5c6:	b8 2c       	mov	r11, r8
 5c8:	01 c0       	rjmp	.+2      	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5ca:	b9 2c       	mov	r11, r9
 5cc:	a4 fe       	sbrs	r10, 4
 5ce:	0f c0       	rjmp	.+30     	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5d0:	fe 01       	movw	r30, r28
 5d2:	e8 0d       	add	r30, r8
 5d4:	f1 1d       	adc	r31, r1
 5d6:	80 81       	ld	r24, Z
 5d8:	80 33       	cpi	r24, 0x30	; 48
 5da:	21 f4       	brne	.+8      	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5dc:	9a 2d       	mov	r25, r10
 5de:	99 7e       	andi	r25, 0xE9	; 233
 5e0:	a9 2e       	mov	r10, r25
 5e2:	09 c0       	rjmp	.+18     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5e4:	a2 fe       	sbrs	r10, 2
 5e6:	06 c0       	rjmp	.+12     	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5e8:	b3 94       	inc	r11
 5ea:	b3 94       	inc	r11
 5ec:	04 c0       	rjmp	.+8      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5ee:	8a 2d       	mov	r24, r10
 5f0:	86 78       	andi	r24, 0x86	; 134
 5f2:	09 f0       	breq	.+2      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5f4:	b3 94       	inc	r11
 5f6:	a3 fc       	sbrc	r10, 3
 5f8:	11 c0       	rjmp	.+34     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 5fa:	a0 fe       	sbrs	r10, 0
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 5fe:	b2 14       	cp	r11, r2
 600:	88 f4       	brcc	.+34     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 602:	28 0c       	add	r2, r8
 604:	92 2c       	mov	r9, r2
 606:	9b 18       	sub	r9, r11
 608:	0e c0       	rjmp	.+28     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 60a:	b2 14       	cp	r11, r2
 60c:	60 f4       	brcc	.+24     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 60e:	b6 01       	movw	r22, r12
 610:	80 e2       	ldi	r24, 0x20	; 32
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 618:	b3 94       	inc	r11
 61a:	f7 cf       	rjmp	.-18     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 61c:	b2 14       	cp	r11, r2
 61e:	18 f4       	brcc	.+6      	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 620:	2b 18       	sub	r2, r11
 622:	02 c0       	rjmp	.+4      	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 624:	98 2c       	mov	r9, r8
 626:	21 2c       	mov	r2, r1
 628:	a4 fe       	sbrs	r10, 4
 62a:	10 c0       	rjmp	.+32     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e3       	ldi	r24, 0x30	; 48
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 636:	a2 fe       	sbrs	r10, 2
 638:	17 c0       	rjmp	.+46     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 63a:	a1 fc       	sbrc	r10, 1
 63c:	03 c0       	rjmp	.+6      	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 63e:	88 e7       	ldi	r24, 0x78	; 120
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
 644:	88 e5       	ldi	r24, 0x58	; 88
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	b6 01       	movw	r22, r12
 64a:	0c c0       	rjmp	.+24     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 64c:	8a 2d       	mov	r24, r10
 64e:	86 78       	andi	r24, 0x86	; 134
 650:	59 f0       	breq	.+22     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 652:	a1 fe       	sbrs	r10, 1
 654:	02 c0       	rjmp	.+4      	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 656:	8b e2       	ldi	r24, 0x2B	; 43
 658:	01 c0       	rjmp	.+2      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 65a:	80 e2       	ldi	r24, 0x20	; 32
 65c:	a7 fc       	sbrc	r10, 7
 65e:	8d e2       	ldi	r24, 0x2D	; 45
 660:	b6 01       	movw	r22, r12
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 668:	89 14       	cp	r8, r9
 66a:	38 f4       	brcc	.+14     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 66c:	b6 01       	movw	r22, r12
 66e:	80 e3       	ldi	r24, 0x30	; 48
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 676:	9a 94       	dec	r9
 678:	f7 cf       	rjmp	.-18     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 67a:	8a 94       	dec	r8
 67c:	f3 01       	movw	r30, r6
 67e:	e8 0d       	add	r30, r8
 680:	f1 1d       	adc	r31, r1
 682:	80 81       	ld	r24, Z
 684:	b6 01       	movw	r22, r12
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 68c:	81 10       	cpse	r8, r1
 68e:	f5 cf       	rjmp	.-22     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 690:	22 20       	and	r2, r2
 692:	09 f4       	brne	.+2      	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 694:	42 ce       	rjmp	.-892    	; 0x31a <vfprintf+0x24>
 696:	b6 01       	movw	r22, r12
 698:	80 e2       	ldi	r24, 0x20	; 32
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <fputc>
 6a0:	2a 94       	dec	r2
 6a2:	f6 cf       	rjmp	.-20     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 6a4:	f6 01       	movw	r30, r12
 6a6:	86 81       	ldd	r24, Z+6	; 0x06
 6a8:	97 81       	ldd	r25, Z+7	; 0x07
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6ac:	8f ef       	ldi	r24, 0xFF	; 255
 6ae:	9f ef       	ldi	r25, 0xFF	; 255
 6b0:	2b 96       	adiw	r28, 0x0b	; 11
 6b2:	e2 e1       	ldi	r30, 0x12	; 18
 6b4:	0c 94 28 04 	jmp	0x850	; 0x850 <__epilogue_restores__>

000006b8 <strnlen_P>:
 6b8:	fc 01       	movw	r30, r24
 6ba:	05 90       	lpm	r0, Z+
 6bc:	61 50       	subi	r22, 0x01	; 1
 6be:	70 40       	sbci	r23, 0x00	; 0
 6c0:	01 10       	cpse	r0, r1
 6c2:	d8 f7       	brcc	.-10     	; 0x6ba <strnlen_P+0x2>
 6c4:	80 95       	com	r24
 6c6:	90 95       	com	r25
 6c8:	8e 0f       	add	r24, r30
 6ca:	9f 1f       	adc	r25, r31
 6cc:	08 95       	ret

000006ce <strnlen>:
 6ce:	fc 01       	movw	r30, r24
 6d0:	61 50       	subi	r22, 0x01	; 1
 6d2:	70 40       	sbci	r23, 0x00	; 0
 6d4:	01 90       	ld	r0, Z+
 6d6:	01 10       	cpse	r0, r1
 6d8:	d8 f7       	brcc	.-10     	; 0x6d0 <strnlen+0x2>
 6da:	80 95       	com	r24
 6dc:	90 95       	com	r25
 6de:	8e 0f       	add	r24, r30
 6e0:	9f 1f       	adc	r25, r31
 6e2:	08 95       	ret

000006e4 <fputc>:
 6e4:	0f 93       	push	r16
 6e6:	1f 93       	push	r17
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	fb 01       	movw	r30, r22
 6ee:	23 81       	ldd	r18, Z+3	; 0x03
 6f0:	21 fd       	sbrc	r18, 1
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <fputc+0x16>
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	9f ef       	ldi	r25, 0xFF	; 255
 6f8:	2c c0       	rjmp	.+88     	; 0x752 <fputc+0x6e>
 6fa:	22 ff       	sbrs	r18, 2
 6fc:	16 c0       	rjmp	.+44     	; 0x72a <fputc+0x46>
 6fe:	46 81       	ldd	r20, Z+6	; 0x06
 700:	57 81       	ldd	r21, Z+7	; 0x07
 702:	24 81       	ldd	r18, Z+4	; 0x04
 704:	35 81       	ldd	r19, Z+5	; 0x05
 706:	42 17       	cp	r20, r18
 708:	53 07       	cpc	r21, r19
 70a:	44 f4       	brge	.+16     	; 0x71c <fputc+0x38>
 70c:	a0 81       	ld	r26, Z
 70e:	b1 81       	ldd	r27, Z+1	; 0x01
 710:	9d 01       	movw	r18, r26
 712:	2f 5f       	subi	r18, 0xFF	; 255
 714:	3f 4f       	sbci	r19, 0xFF	; 255
 716:	31 83       	std	Z+1, r19	; 0x01
 718:	20 83       	st	Z, r18
 71a:	8c 93       	st	X, r24
 71c:	26 81       	ldd	r18, Z+6	; 0x06
 71e:	37 81       	ldd	r19, Z+7	; 0x07
 720:	2f 5f       	subi	r18, 0xFF	; 255
 722:	3f 4f       	sbci	r19, 0xFF	; 255
 724:	37 83       	std	Z+7, r19	; 0x07
 726:	26 83       	std	Z+6, r18	; 0x06
 728:	14 c0       	rjmp	.+40     	; 0x752 <fputc+0x6e>
 72a:	8b 01       	movw	r16, r22
 72c:	ec 01       	movw	r28, r24
 72e:	fb 01       	movw	r30, r22
 730:	00 84       	ldd	r0, Z+8	; 0x08
 732:	f1 85       	ldd	r31, Z+9	; 0x09
 734:	e0 2d       	mov	r30, r0
 736:	09 95       	icall
 738:	89 2b       	or	r24, r25
 73a:	e1 f6       	brne	.-72     	; 0x6f4 <fputc+0x10>
 73c:	d8 01       	movw	r26, r16
 73e:	16 96       	adiw	r26, 0x06	; 6
 740:	8d 91       	ld	r24, X+
 742:	9c 91       	ld	r25, X
 744:	17 97       	sbiw	r26, 0x07	; 7
 746:	01 96       	adiw	r24, 0x01	; 1
 748:	17 96       	adiw	r26, 0x07	; 7
 74a:	9c 93       	st	X, r25
 74c:	8e 93       	st	-X, r24
 74e:	16 97       	sbiw	r26, 0x06	; 6
 750:	ce 01       	movw	r24, r28
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	1f 91       	pop	r17
 758:	0f 91       	pop	r16
 75a:	08 95       	ret

0000075c <__ultoa_invert>:
 75c:	fa 01       	movw	r30, r20
 75e:	aa 27       	eor	r26, r26
 760:	28 30       	cpi	r18, 0x08	; 8
 762:	51 f1       	breq	.+84     	; 0x7b8 <__ultoa_invert+0x5c>
 764:	20 31       	cpi	r18, 0x10	; 16
 766:	81 f1       	breq	.+96     	; 0x7c8 <__ultoa_invert+0x6c>
 768:	e8 94       	clt
 76a:	6f 93       	push	r22
 76c:	6e 7f       	andi	r22, 0xFE	; 254
 76e:	6e 5f       	subi	r22, 0xFE	; 254
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	af 4f       	sbci	r26, 0xFF	; 255
 778:	b1 e0       	ldi	r27, 0x01	; 1
 77a:	3e d0       	rcall	.+124    	; 0x7f8 <__ultoa_invert+0x9c>
 77c:	b4 e0       	ldi	r27, 0x04	; 4
 77e:	3c d0       	rcall	.+120    	; 0x7f8 <__ultoa_invert+0x9c>
 780:	67 0f       	add	r22, r23
 782:	78 1f       	adc	r23, r24
 784:	89 1f       	adc	r24, r25
 786:	9a 1f       	adc	r25, r26
 788:	a1 1d       	adc	r26, r1
 78a:	68 0f       	add	r22, r24
 78c:	79 1f       	adc	r23, r25
 78e:	8a 1f       	adc	r24, r26
 790:	91 1d       	adc	r25, r1
 792:	a1 1d       	adc	r26, r1
 794:	6a 0f       	add	r22, r26
 796:	71 1d       	adc	r23, r1
 798:	81 1d       	adc	r24, r1
 79a:	91 1d       	adc	r25, r1
 79c:	a1 1d       	adc	r26, r1
 79e:	20 d0       	rcall	.+64     	; 0x7e0 <__ultoa_invert+0x84>
 7a0:	09 f4       	brne	.+2      	; 0x7a4 <__ultoa_invert+0x48>
 7a2:	68 94       	set
 7a4:	3f 91       	pop	r19
 7a6:	2a e0       	ldi	r18, 0x0A	; 10
 7a8:	26 9f       	mul	r18, r22
 7aa:	11 24       	eor	r1, r1
 7ac:	30 19       	sub	r19, r0
 7ae:	30 5d       	subi	r19, 0xD0	; 208
 7b0:	31 93       	st	Z+, r19
 7b2:	de f6       	brtc	.-74     	; 0x76a <__ultoa_invert+0xe>
 7b4:	cf 01       	movw	r24, r30
 7b6:	08 95       	ret
 7b8:	46 2f       	mov	r20, r22
 7ba:	47 70       	andi	r20, 0x07	; 7
 7bc:	40 5d       	subi	r20, 0xD0	; 208
 7be:	41 93       	st	Z+, r20
 7c0:	b3 e0       	ldi	r27, 0x03	; 3
 7c2:	0f d0       	rcall	.+30     	; 0x7e2 <__ultoa_invert+0x86>
 7c4:	c9 f7       	brne	.-14     	; 0x7b8 <__ultoa_invert+0x5c>
 7c6:	f6 cf       	rjmp	.-20     	; 0x7b4 <__ultoa_invert+0x58>
 7c8:	46 2f       	mov	r20, r22
 7ca:	4f 70       	andi	r20, 0x0F	; 15
 7cc:	40 5d       	subi	r20, 0xD0	; 208
 7ce:	4a 33       	cpi	r20, 0x3A	; 58
 7d0:	18 f0       	brcs	.+6      	; 0x7d8 <__ultoa_invert+0x7c>
 7d2:	49 5d       	subi	r20, 0xD9	; 217
 7d4:	31 fd       	sbrc	r19, 1
 7d6:	40 52       	subi	r20, 0x20	; 32
 7d8:	41 93       	st	Z+, r20
 7da:	02 d0       	rcall	.+4      	; 0x7e0 <__ultoa_invert+0x84>
 7dc:	a9 f7       	brne	.-22     	; 0x7c8 <__ultoa_invert+0x6c>
 7de:	ea cf       	rjmp	.-44     	; 0x7b4 <__ultoa_invert+0x58>
 7e0:	b4 e0       	ldi	r27, 0x04	; 4
 7e2:	a6 95       	lsr	r26
 7e4:	97 95       	ror	r25
 7e6:	87 95       	ror	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	ba 95       	dec	r27
 7ee:	c9 f7       	brne	.-14     	; 0x7e2 <__ultoa_invert+0x86>
 7f0:	00 97       	sbiw	r24, 0x00	; 0
 7f2:	61 05       	cpc	r22, r1
 7f4:	71 05       	cpc	r23, r1
 7f6:	08 95       	ret
 7f8:	9b 01       	movw	r18, r22
 7fa:	ac 01       	movw	r20, r24
 7fc:	0a 2e       	mov	r0, r26
 7fe:	06 94       	lsr	r0
 800:	57 95       	ror	r21
 802:	47 95       	ror	r20
 804:	37 95       	ror	r19
 806:	27 95       	ror	r18
 808:	ba 95       	dec	r27
 80a:	c9 f7       	brne	.-14     	; 0x7fe <__ultoa_invert+0xa2>
 80c:	62 0f       	add	r22, r18
 80e:	73 1f       	adc	r23, r19
 810:	84 1f       	adc	r24, r20
 812:	95 1f       	adc	r25, r21
 814:	a0 1d       	adc	r26, r0
 816:	08 95       	ret

00000818 <__prologue_saves__>:
 818:	2f 92       	push	r2
 81a:	3f 92       	push	r3
 81c:	4f 92       	push	r4
 81e:	5f 92       	push	r5
 820:	6f 92       	push	r6
 822:	7f 92       	push	r7
 824:	8f 92       	push	r8
 826:	9f 92       	push	r9
 828:	af 92       	push	r10
 82a:	bf 92       	push	r11
 82c:	cf 92       	push	r12
 82e:	df 92       	push	r13
 830:	ef 92       	push	r14
 832:	ff 92       	push	r15
 834:	0f 93       	push	r16
 836:	1f 93       	push	r17
 838:	cf 93       	push	r28
 83a:	df 93       	push	r29
 83c:	cd b7       	in	r28, 0x3d	; 61
 83e:	de b7       	in	r29, 0x3e	; 62
 840:	ca 1b       	sub	r28, r26
 842:	db 0b       	sbc	r29, r27
 844:	0f b6       	in	r0, 0x3f	; 63
 846:	f8 94       	cli
 848:	de bf       	out	0x3e, r29	; 62
 84a:	0f be       	out	0x3f, r0	; 63
 84c:	cd bf       	out	0x3d, r28	; 61
 84e:	09 94       	ijmp

00000850 <__epilogue_restores__>:
 850:	2a 88       	ldd	r2, Y+18	; 0x12
 852:	39 88       	ldd	r3, Y+17	; 0x11
 854:	48 88       	ldd	r4, Y+16	; 0x10
 856:	5f 84       	ldd	r5, Y+15	; 0x0f
 858:	6e 84       	ldd	r6, Y+14	; 0x0e
 85a:	7d 84       	ldd	r7, Y+13	; 0x0d
 85c:	8c 84       	ldd	r8, Y+12	; 0x0c
 85e:	9b 84       	ldd	r9, Y+11	; 0x0b
 860:	aa 84       	ldd	r10, Y+10	; 0x0a
 862:	b9 84       	ldd	r11, Y+9	; 0x09
 864:	c8 84       	ldd	r12, Y+8	; 0x08
 866:	df 80       	ldd	r13, Y+7	; 0x07
 868:	ee 80       	ldd	r14, Y+6	; 0x06
 86a:	fd 80       	ldd	r15, Y+5	; 0x05
 86c:	0c 81       	ldd	r16, Y+4	; 0x04
 86e:	1b 81       	ldd	r17, Y+3	; 0x03
 870:	aa 81       	ldd	r26, Y+2	; 0x02
 872:	b9 81       	ldd	r27, Y+1	; 0x01
 874:	ce 0f       	add	r28, r30
 876:	d1 1d       	adc	r29, r1
 878:	0f b6       	in	r0, 0x3f	; 63
 87a:	f8 94       	cli
 87c:	de bf       	out	0x3e, r29	; 62
 87e:	0f be       	out	0x3f, r0	; 63
 880:	cd bf       	out	0x3d, r28	; 61
 882:	ed 01       	movw	r28, r26
 884:	08 95       	ret

00000886 <_exit>:
 886:	f8 94       	cli

00000888 <__stop_program>:
 888:	ff cf       	rjmp	.-2      	; 0x888 <__stop_program>
